[{"/home/ganam/active_wsl_projects/ZCAA/frontend/src/index.js":"1","/home/ganam/active_wsl_projects/ZCAA/frontend/src/App.js":"2","/home/ganam/active_wsl_projects/ZCAA/frontend/src/reportWebVitals.js":"3","/home/ganam/active_wsl_projects/ZCAA/frontend/src/mainComponent.js":"4","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/AboutComponent/AboutComponent.js":"5","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/shared/NavbarComponent/NavbarComponent.js":"6","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/shared/FooterComponent/FooterComponent.js":"7","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/homeComponent.js":"8","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/AboutComponent/MemberCardComponent/MemberCardComponent.js":"9","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/Network_diagramComponent/Network_diagramComponent.js":"10","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/MapComponent/MapComponent.js":"11","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/NewsCardComponent/NewsCardComponent.js":"12","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/LoginComponent.js":"13","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/GooglebtnComponent/GooglebtnComponent.js":"14","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/DatePickerComponent/DatePickerComponent.js":"15","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/DatePickerComponent/TextError.js":"16","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/FormComponent.js":"17","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/CollapsingUniCardComponent/CollapsingUniCardComponent.js":"18","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/CollapsingEntityCardComponent/CollapsingEntityCardComponent.js":"19","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/TextError.js":"20","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/GooglebtnComponent/GooglebtnComponent.js":"21","/home/ganam/active_wsl_projects/ZCAA/frontend/src/ScrollToTopComponent.js":"22","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/Network_diagramComponent/jparticle.jquery.js":"23","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/NewsComponent/NewsComponent.js":"24","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/AdminComponent/AdminComponent.js":"25","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/NewsComponent/NewsPostViewComponent/NewsPostViewComponent.js":"26","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/NewsComponent/NewsPostViewComponent/EditorComponent/EditorComponent.js":"27","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/NewsComponent/NewsCardComponenet/NewsCardComponenet.js":"28","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/AdminComponent/News_form/News_form.js":"29","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/NewsComponent/NewsPostViewComponent/EditorComponent/editorJsTools.js":"30","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/AdminComponent/News_form/EditorComponent/EditorComponent.js":"31","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/AdminComponent/News_form/EditorComponent/editorJsTools.js":"32","/home/ganam/active_wsl_projects/ZCAA/frontend/src/contexts/helloContext.js":"33","/home/ganam/active_wsl_projects/ZCAA/frontend/src/contexts/loginContext.js":"34","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/shared/LoginModalComponenet/LoginModalComponenet.js":"35","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/shared/LoginModalComponenet/GooglebtnComponent/GooglebtnComponent.js":"36"},{"size":547,"mtime":1613766390000,"results":"37","hashOfConfig":"38"},{"size":356,"mtime":1613787225030,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1613766390000,"results":"40","hashOfConfig":"38"},{"size":5021,"mtime":1613887213774,"results":"41","hashOfConfig":"38"},{"size":6922,"mtime":1613873152534,"results":"42","hashOfConfig":"38"},{"size":5244,"mtime":1613887526574,"results":"43","hashOfConfig":"38"},{"size":564,"mtime":1613766390000,"results":"44","hashOfConfig":"38"},{"size":8814,"mtime":1613852619146,"results":"45","hashOfConfig":"38"},{"size":1627,"mtime":1613766390000,"results":"46","hashOfConfig":"38"},{"size":1449,"mtime":1613766390000,"results":"47","hashOfConfig":"38"},{"size":4901,"mtime":1613766390000,"results":"48","hashOfConfig":"38"},{"size":1652,"mtime":1613877921724,"results":"49","hashOfConfig":"38"},{"size":915,"mtime":1613785193580,"results":"50","hashOfConfig":"38"},{"size":4074,"mtime":1613766390000,"results":"51","hashOfConfig":"38"},{"size":867,"mtime":1610050817905,"results":"52","hashOfConfig":"38"},{"size":138,"mtime":1610076383463,"results":"53","hashOfConfig":"38"},{"size":49554,"mtime":1613844567836,"results":"54","hashOfConfig":"38"},{"size":7724,"mtime":1613766390000,"results":"55","hashOfConfig":"38"},{"size":10681,"mtime":1613843477746,"results":"56","hashOfConfig":"38"},{"size":181,"mtime":1613766390000,"results":"57","hashOfConfig":"38"},{"size":4061,"mtime":1613766390000,"results":"58","hashOfConfig":"38"},{"size":388,"mtime":1613766390000,"results":"59","hashOfConfig":"38"},{"size":14050,"mtime":1613766390000,"results":"60","hashOfConfig":"38"},{"size":1835,"mtime":1613878187624,"results":"61","hashOfConfig":"38"},{"size":371,"mtime":1613766390000,"results":"62","hashOfConfig":"38"},{"size":2487,"mtime":1613863842704,"results":"63","hashOfConfig":"38"},{"size":1198,"mtime":1613863701974,"results":"64","hashOfConfig":"38"},{"size":5689,"mtime":1613886595544,"results":"65","hashOfConfig":"38"},{"size":10471,"mtime":1613888322004,"results":"66","hashOfConfig":"38"},{"size":1364,"mtime":1613766390000,"results":"67","hashOfConfig":"38"},{"size":1046,"mtime":1613864255474,"results":"68","hashOfConfig":"38"},{"size":1364,"mtime":1613766390000,"results":"69","hashOfConfig":"38"},{"size":520,"mtime":1613783495560,"results":"70","hashOfConfig":"38"},{"size":1606,"mtime":1613832079226,"results":"71","hashOfConfig":"38"},{"size":4416,"mtime":1613836001566,"results":"72","hashOfConfig":"38"},{"size":4073,"mtime":1613797567310,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"j4gnmb",{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"129","usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ganam/active_wsl_projects/ZCAA/frontend/src/index.js",[],["158","159"],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/App.js",["160","161"],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/reportWebVitals.js",[],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/mainComponent.js",["162","163","164","165"],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/AboutComponent/AboutComponent.js",["166"],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/shared/NavbarComponent/NavbarComponent.js",["167"],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/shared/FooterComponent/FooterComponent.js",["168"],"import React from 'react'\nimport { Col, Container, Row } from 'reactstrap'\nimport \"./FooterComponent.css\"\nexport default function FooterComponent() {\n    return (\n        <Container id='footer_container' fluid >\n            <Container >\n                <Row>\n                    <Col md=\"3\">\n\n                        <img style={{ width: \"150px\", height: \"auto\", filter: \"grayscale(40%)\", filter: \"drop-shadow(0 0 0.75rem )\" }} src=\"/logo.png\" alt=\"oval\" />\n\n                    </Col>\n                </Row>\n            </Container>\n\n        </Container>\n    )\n}\n","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/homeComponent.js",["169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/AboutComponent/MemberCardComponent/MemberCardComponent.js",[],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/Network_diagramComponent/Network_diagramComponent.js",["186"],"import { React, useEffect } from 'react'\n// import { $, jQuery } from 'jquery';\nimport initJParticle from \"./jparticle.jquery\"\nimport $ from \"jquery\";\nimport \"./Network_diagramComponent.css\"\n\nexport default function Network_diagramComponent(props) {\n    initJParticle($)\n    useEffect(() => {\n\n        var w = window,\n            d = document,\n            e = d.documentElement,\n            g = d.getElementsByTagName('body')[0],\n            x = w.innerWidth || e.clientWidth || g.clientWidth,\n            y = w.innerHeight || e.clientHeight || g.clientHeight;\n\n        const particles_number = Math.ceil(100 / 1520 * x);\n\n        $(\"#network_div\").jParticle({\n            particlesNumber: particles_number, background: 'CCE6EB', color: 'white', createLinkDist: 180, speed: 100\n\n\n        });\n\n    })\n    return (\n        <div id=\"network_div\" style={{ position: 'relative', height: \"608px\", backgroundColor: \"#CCE6EB\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)' }}>\n            <img style={{ width: \"auto\", height: \"200px\", position: 'absolute', filter: 'drop-shadow(0px 5px 4px rgba(0, 0, 0, 0.25)) ' }} src={props.logo_img} id=\"c\" alt=\"oval\" />\n            <div id=\"network_card\" style={{ position: \"absolute\" }}>\n                <div id=\"network_card_text\">\n                    connecting alumini around the world\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/MapComponent/MapComponent.js",["187","188","189","190","191","192"],"import React, { useEffect, useState } from \"react\";\n\nimport { VectorMap } from \"react-jvectormap\";\nimport data from \"./country-codes-lat-long-alpha3.json\";\n\n\n\n\nconst markers2 = [\n    { latLng: [52.50, 13.39], name: 'Berlin' },\n    { latLng: [53.56, 10.00], name: 'Hamburg' },\n    { latLng: [48.13, 11.56], name: 'Munich' },\n    { latLng: [50.95, 6.96], name: 'Cologne' },\n    { latLng: [50.11, 8.68], name: 'Frankfurt am Main' },\n    { latLng: [48.77, 9.17], name: 'Stuttgart' },\n    { latLng: [51.23, 6.78], name: 'Düsseldorf' },\n    { latLng: [51.51, 7.46], name: 'Dortmund' },\n    { latLng: [51.45, 7.01], name: 'Essen' },\n    { latLng: [53.07, 8.80], name: 'Bremen' }\n]\n\nconst handleClick = (e, countryCode) => {\n    console.log(countryCode);\n    // console.log(data.ref_country_codes)\n};\n\nconst Map = () => {\n    const [markers, setMarkers] = useState([]);\n    const [count_array, setcount_array] = useState([]);\n    const [countries, setCountries] = useState([]);\n\n\n\n\n    useEffect(() => { // fetch countries data here .. only runs when the component mounts\n        setTimeout(() => {\n            const fetched_countries = [\n                { code: \"DE\", country: \"Germany\", count: 7 },\n                { code: \"RU\", country: \"Russia\", count: 10 },\n                { code: \"US\", country: \"United States\", count: 22 },\n                { code: \"FR\", country: \"France\", count: 4 },\n                { code: \"IT\", country: \"Italy\", count: 33 },\n                { code: \"AU\", country: \"Austria\", count: 2 },\n                { code: \"EG\", country: \"Egypt\", count: 50 },\n            ]\n            setCountries(fetched_countries)\n            const [markers, count_array] = produce_markers(fetched_countries, data.ref_country_codes)\n            setMarkers(markers);\n            setcount_array(count_array)\n        }\n            , 1000)\n    }, [])\n\n    const produce_markers = (countries, data) => {\n        const markers = countries.map((entry) => {\n            // console.log(data)\n            let obj = data.find(obj => obj.country == entry.country);\n            let marker = { latLng: [obj.latitude, obj.longitude], name: `${entry.count} Alumini in ${obj.country}  ` }\n            return marker\n\n        })\n\n        const count_array = countries.map((entry) => { // return array of the aluminis count in each entry of the markers \n            return entry.count\n        })\n        return ([markers, count_array])\n    }\n\n\n    const tip_handler = (e, el, code) => {\n        // console.log(el)\n        let country_data = countries.find((country) => { return (country.code == code) }) // if the country hovered dont' have alumini this will be undefined\n        console.log({ country_data })\n        // let number_of_alum = countries[code]\n        let hoverd_country_name = el.html();\n        if (el.html() === \"Israel\") {\n            hoverd_country_name = \"Palestine\";\n        }\n\n        let hovered_country = countries.find(c => c.code == code);\n        //  el.html(el.html()+' (GDP - '+countries[code]+')');\n        if (!!country_data) {\n            el.html(country_data.count + ' Alumini in ' + hoverd_country_name);\n        }\n        else {\n            el.html(hoverd_country_name);\n        }\n    }\n\n    return (\n        <VectorMap\n            markersSelectable={true}\n            markers={markers}\n            markerStyle={{\n                initial: {\n                    fill: '#26ADCB'\n                },\n                selected: {\n                    fill: '#CA0020'\n                }\n            }}\n            regionStyle={{\n                initial: {\n                    fill: '#B8E186'\n                },\n                selected: {\n                    fill: '#F4A582'\n                }\n            }}\n            series={{\n                markers: [{\n                    attribute: 'r',\n                    scale: [5, 8],\n                    values: count_array\n                }]\n            }}\n\n\n            onRegionTipShow={tip_handler}\n            map={\"world_mill\"}\n            backgroundColor=\"transparent\" //change it to ocean blue: #0077be\n            zoomOnScroll={false}\n            containerStyle={{\n                width: \"100%\",\n                height: \"100%\"\n            }}\n            onRegionClick={handleClick} //gets the country code\n            containerClassName=\"map\"\n            regionStyle={{\n                initial: {\n                    fill: \"#c9c2c2\",\n                    \"fill-opacity\": 0.9,\n                    stroke: \"none\",\n                    \"stroke-width\": 0,\n                    \"stroke-opacity\": 0\n                },\n                hover: {\n                    \"fill-opacity\": 0.8,\n                    cursor: \"pointer\"\n                },\n                selected: {\n                    fill: \"#2938bc\" //color for the clicked country\n                },\n                selectedHover: {}\n            }}\n            regionsSelectable={true}\n\n        />\n\n    );\n};\nexport default Map;","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/NewsCardComponent/NewsCardComponent.js",["193"],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/LoginComponent.js",[],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/GooglebtnComponent/GooglebtnComponent.js",["194","195"],"import React, { Component } from 'react'\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport \"./GooglebtnComponent.css\"\nimport zc_logo from '../zc_logo.png'\nimport google_logo from './google_logo.png'\nimport { Alert } from 'reactstrap';\n\n\nconst CLIENT_ID = '1050309843237-hjb6hmp0ku18p9oblkk5fshpvp7g0v87.apps.googleusercontent.com';\n\n\nclass GooglebtnComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLogined: false,\n            accessToken: '',\n            show_alert: false\n\n        };\n\n        this.login = this.login.bind(this);\n        this.handleLoginFailure = this.handleLoginFailure.bind(this);\n        this.logout = this.logout.bind(this);\n        this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\n    }\n\n    login(response) {\n        console.log(response)\n        if (!response.profileObj.email.endsWith('@zewailcity.edu.eg')) {\n            this.setState({ show_alert: true });\n        }\n        if (response.accessToken && response.profileObj.email.endsWith('@zewailcity.edu.eg')) {\n            this.props.onclick(response)\n            this.setState({ show_alert: false });\n            // var xhr = new XMLHttpRequest();\n            // xhr.open('POST', 'http://localhost:5000');\n            // xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n            // xhr.onload = function () {\n            //     console.log('Signed in as: ' + xhr.responseText);\n            // };\n            // xhr.send('idtoken=' + response.tokenObj.id_token);\n\n            // this.setState(state => ({\n            //     isLogined: true,\n            //     accessToken: response.accessToken\n            // }));\n        }\n    }\n\n    logout(response) {\n        this.setState(state => ({\n            isLogined: false,\n            accessToken: ''\n        }));\n    }\n\n    handleLoginFailure(response) {\n        // alert('Failed to log in')\n    }\n\n    handleLogoutFailure(response) {\n        // alert('Failed to log out')\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{ marginTop: \"20px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", display: \"flex\", flexDirection: \"column\" }}>\n                    {\n                        <GoogleLogin\n                            style={{ width: \"300px\" }}\n                            clientId={CLIENT_ID}\n                            render={renderProps => (\n                                <button id=\"verify_button\"\n                                    onClick={renderProps.onClick}\n                                    disabled={renderProps.disabled}>\n                                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                        <span style={{ marginLeft: \"10px\" }}>verfiy with google</span>\n                                        <div style={{ flexGrow: \"1\" }}></div>\n                                        <img style={{ width: \"30px\", height: \"auto\", opacity: \"1\", justifySelf: \"end\", marginRight: \"7px\" }} src={google_logo} alt=\"logo\" />\n\n                                        <img style={{ width: \"30px\", height: \"auto\", opacity: \"1\", justifySelf: \"end\" }} src={zc_logo} alt=\"logo\" />\n                                    </div>\n\n                                </button>\n                            )}\n                            buttonText='Login'\n                            onSuccess={this.login}\n                            onFailure={this.handleLoginFailure}\n                            cookiePolicy={'single_host_origin'}\n                            responseType='code,token'\n                        />\n                    }\n                    {this.state.show_alert ?\n                        <Alert color=\"danger\" className=\"mt-3\" style={{ width: \"100%\" }}>\n                            you must use a zewailcity email\n                        </Alert> : null\n                    }\n                </div>\n\n            </React.Fragment>\n\n        )\n    }\n}\n\nexport default GooglebtnComponent;\n","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/DatePickerComponent/DatePickerComponent.js",[],["196","197"],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/DatePickerComponent/TextError.js",[],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/FormComponent.js",["198","199","200","201","202","203"],"// components/contactus-form.component.js\nimport { useContext } from \"react\";\nimport { LoginContext } from \"../../../../contexts/loginContext\"\n\nimport React, { useState, useCallback, useRef } from 'react'\nimport { Formik, Field, Form, FieldArray, ErrorMessage } from 'formik';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'reactstrap'\nimport './FormComponent.css'\nimport CollapsingCardComponent from './CollapsingUniCardComponent/CollapsingUniCardComponent'\nimport CollapsingEntityCardComponent from './CollapsingEntityCardComponent/CollapsingEntityCardComponent'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport * as Yup from 'yup';\nimport TextError from \"./TextError\"\nimport zc_logo from '../zc_logo.png'\nimport logo_shadowed from '../logo_shadowed.png'\nimport { Modal, ModalBody } from 'reactstrap';\nimport GooglebtnComponent from './GooglebtnComponent/GooglebtnComponent'\nimport ReactLoading from 'react-loading';\n\n\n\n\n\nconst SignupSchema = Yup.object().shape({\n    first_name: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n    last_name: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n    email: Yup.string().email('Invalid email'),\n    exp_field: Yup.string().required('Required'),\n    phone: Yup.number(\"must be a number\").positive(\"positive numbers only \").integer(\"integers only\"),\n    birth_day: Yup.number(\"must be a number\").min(1, 'Too Short!').max(31, 'not a day number').required('Required'),\n    birth_month: Yup.number(\"must be a number\").min(1, 'Too Short!').max(12, 'not a month number').required('Required'),\n    birth_year: Yup.number(\"must be a number\").min(1980, '1980 min').required('Required'),\n    address: Yup.string().required('Required'),\n    zc_id: Yup.number(\"must be a number\").min(201300000, '201300000 min').required('Required'),\n    grad_year: Yup.number(\"must be a number\").min(2018, '2018 min').required('Required'),\n    major: Yup.string().required('Required'),\n    residency: Yup.object().shape({\n        country: Yup.string().min(2, 'error').required('Required'),\n        region: Yup.string().min(2, 'error'),\n        // Rest of your amenities object properties\n    }),\n    new_exp_field: Yup.string().when(\"exp_field\", {\n        is: (val) => val == \"other\",\n        then: Yup.string().required(\"Required\")\n    })\n\n});\n\n\nconst FormComponent = (props) => {\n\n    const { login, IsLoggedIn, Token } = useContext(LoginContext);\n\n    // http states\n    const [Response_json_content, setResponse_json_content] = useState({});\n    const [Fetch_success, setFetch_success] = useState(false);\n    const [Sending_data, setSending_data] = useState(false);\n    const [Fetch_error, setFetch_error] = useState(false);\n    const [Error_message, setError_message] = useState(null);\n\n\n    // google modal states\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n    let [gdata, set_gdata] = useState(null)\n\n\n\n\n    const submit_applicant = async (google_data) => {\n        try {\n            toggle();\n            setSending_data(true)\n            //post data as formdata to the back end ... form data will set the content type automatically to multipart ... use multer & body-parser in back end to deal with it\n            let form_state = formRef.current.values;\n            let id_token = google_data.tokenObj.id_token\n            const body_data = { form_state, google_data }\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/auth/signup`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body_data)\n            });\n            const response_json_content = await response.json()\n            if (!response.ok) {\n                setFetch_error(true)\n                throw new Error(response_json_content.message || \"can't fetch data ... could be a connection error or unhandled backend error\");\n            }\n            setSending_data(false)\n            setResponse_json_content(response_json_content)\n\n            if (response_json_content.message === \"success\" || response_json_content.message === \"already_applied_before\") {\n                setFetch_success(true)\n                console.log(response_json_content)\n                login(response_json_content.user, response_json_content.token, response_json_content.expirateion_date_string, true)\n            }\n\n        } catch (err) {\n            setSending_data(false)\n            setError_message(err.message)\n            console.log(err);\n        }\n    };\n\n\n    const formRef = useRef();\n\n    return (\n\n        <Formik\n            validationSchema={SignupSchema}\n            innerRef={formRef}\n            initialValues={{\n                first_name: '', last_name: '', email: '', exp_field: '', new_exp_field: '', residency: { country: \"\", region: \"\" }, content: '', phone: '', birth_day: '', birth_month: '', birth_year: '', address: '', zc_id: '', grad_year: '', major: '', minor: '', other_undergraduate_data: '', universities: ['', ''], entities: ['', '']\n            }}\n            onSubmit={\n                (values) => { toggle() } // just show the google modal on submit ... it will call the submit function when google authenticate\n            }\n        >\n            {(formik_object) => {\n                // the dispaly sequence as follows : if success state is true show the sucess component \n                // else if the data is being sent show the loading component \n                // else show the forom component ... which contains the google modal.\n                return (\n                    <Container>\n                        {\n                            IsLoggedIn ?\n                                <div id=\"application_sucess\">\n                                    <div style={{ marginBottom: \"30px\" }}>\n                                        {\n                                            <Container fluid style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", }}>\n                                                <div id=\"login_card\" style={{ backgroundColor: \"white\", marginTop: \"50px\" }}>\n\n                                                    <div style={{ width: \"20%\", minWidth: \"155px\", position: \"relative\", height: \"auto\", marginTop: \"50px\" }}>\n                                                        <img style={{\n                                                            width: \"100%\", minWidth: \"155px\", height: \"auto\", marginTop: \"20px\", borderRadius: \"50%\", border: '11px solid #ADE3ED'\n\n                                                        }} src={Fetch_success ? Response_json_content.user.g_picture : Token.g_picture} alt=\"logo\" />\n\n                                                        <img style={{\n                                                            width: \"30%\", minWidth: \"70px\", height: \"auto\", position: \"absolute\", bottom: \"-20px\", right: \"0px\"\n                                                            ,\n                                                        }} src={logo_shadowed} alt=\"logo\" />\n\n                                                    </div>\n\n                                                    <div style={{\n                                                        width: \"50%\", marginTop: \"10px\", fontSize: '30px',\n                                                        lineHeight: '125.5%', textAlign: 'center', textTransform: 'uppercase',\n                                                        color: '#BDD7DB', fontFamily: \"Cairo\", fontStyle: 'normal', fontWeight: 'bold',\n                                                    }}>\n                                                        <div style={{ color: \"#0091AC\", marginTop: \"30px\", }}>\n                                                            Welocme\n                                                    </div>\n                                                        <div>\n                                                            to the family\n                                                    </div>\n                                                    </div>\n                                                </div>\n                                            </Container>}\n                                    </div>\n                                </div>\n                                :\n                                (Sending_data ?\n                                    <div id=\"loading_spinner\" style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"400px\" }} >\n                                        <div style={{ marginTop: \"100px\" }}>\n                                            <ReactLoading type={\"spin\"} color={\"#00D2F9\"} width={\"20vw\"} />\n                                        </div>\n                                    </div>\n                                    :\n                                    <div id=\"form_and_modal\">\n\n                                        <div id=\"google_modal\" >\n                                            <Modal\n                                                size=\"lg\" style={{ maxWidth: '1600px', width: '80%', marginRight: \"auto\", marginLeft: \"auto\", backgroundColor: 'transparent' }}\n                                                isOpen={modal} toggle={toggle}>\n                                                {/* <ModalHeader toggle={toggle} style={{ borderBottom: \"0px solid #dee2e6\" }}></ModalHeader> */}\n                                                <div style={{}} ></div>\n                                                <ModalBody style={{ padding: \"0px\" }} >\n                                                    <div style={{}}>\n                                                        {!gdata && <Container fluid style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px\" }}>\n                                                            <div id=\"login_card\" style={{}}>\n                                                                <img style={{ width: \"200px\", height: \"auto\", opacity: \"0.5\", marginTop: \"50px\" }} src={zc_logo} alt=\"logo\" />\n                                                                <div id=\"login_disclimare\" >\n                                                                    <span className=\"font1\">You need to have a </span>\n                                                                    <span className=\"font2\">zewailcity email </span>\n                                                                    <span className=\"font1\">to apply </span>\n                                                                </div>\n                                                                <div style={{ marginTop: \"10px\" }}>\n                                                                    <GooglebtnComponent onclick={submit_applicant} />\n                                                                </div>\n                                                            </div>\n                                                        </Container>}\n                                                    </div>\n                                                </ModalBody>\n                                                {/* <ModalFooter>\n                                                    <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\n                                                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n                                                </ModalFooter> */}\n                                            </Modal>\n                                        </div>\n\n                                        <Form>\n\n                                            <div id=\"personal_info_section \">\n                                                <Row >\n                                                    <Col xs=\"12\" className=\"\" >\n                                                        <div\n                                                            style={{\n                                                                textAlign: \"left\",\n                                                                marginTop: \"50px\",\n                                                                marginBottom: \"50px\",\n                                                                borderBottomStyle: 'solid',\n                                                                borderBottomWidth: \"0.5px\",\n                                                                borderBottomColor: \" #C5BCBC\"\n                                                            }} className=\"form_section_title\"\n                                                        >\n                                                            Personal info\n                                                         </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col lg=\"4\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"first_name\" className=\"form_text\">first name </label>\n                                                            <Field name=\"first_name\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='first_name' component={TextError} />\n                                                        </div>\n                                                    </Col>\n                                                    <Col lg=\"4\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"last_name\" className=\"form_text\" >Last name</label>\n                                                            <Field name=\"last_name\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='last_name' component={TextError} />\n\n                                                        </div>\n                                                    </Col>\n\n\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col lg=\"8\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"email\" className=\"form_text\" style={{ letterSpacing: '0.2em' }}>prefered email for communication\n                                                             <span style={{ color: \"#0091AC\", fontWeight: \"bolder\", fontSize: \"11\" }}>{\" (Optional)\"}</span>\n                                                            </label>\n                                                            <Field name=\"email\" className=\"form-control in_field \" type=\"email\" />\n                                                            <ErrorMessage name='email' component={TextError} />\n\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col lg=\"8\">\n                                                        <label className=\"form_text\">\n                                                            Birth date\n                                                         </label>\n                                                    </Col>\n\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col xs=\"10\" lg=\"2\" >\n                                                        <div className=\"form-group my-0\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"birth_day\" className=\"form_text2\">Day</label>\n                                                            <Field name=\"birth_day\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='birth_day' component={TextError} />\n\n                                                        </div>\n                                                    </Col>\n                                                    <Col xs=\"10\" lg=\"2\" >\n                                                        <div className=\"form-group my-0\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"birth_month\" className=\"form_text2\">month</label>\n                                                            <Field name=\"birth_month\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='birth_month' component={TextError} />\n\n                                                        </div>\n                                                    </Col>\n                                                    <Col xs=\"10\" lg=\"2\" >\n                                                        <div className=\"form-group my-0\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"birth_year\" className=\"form_text2\">year</label>\n                                                            <Field name=\"birth_year\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='birth_year' component={TextError} />\n\n                                                        </div>\n\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end mt-5\">\n                                                    <Col lg=\"8\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"phone\" className=\"form_text\">phone\n                                            <span style={{ color: \"#0091AC\", fontWeight: \"bolder\", fontSize: \"11\" }}>{\" (Optional)\"}</span>\n                                                            </label>\n                                                            <Field name=\"phone\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='phone' component={TextError} />\n\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col lg=\"4\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"residency.country\" className=\"form_text\"> country of residence </label>\n                                                            <Field name=\"residency.country\" className=\"form-control in_field\" >\n                                                                {({ form, field }) => {\n                                                                    const { setFieldValue } = form\n                                                                    const { setFieldTouched } = form\n\n                                                                    const value = field.value\n                                                                    return (\n                                                                        <CountryDropdown\n                                                                            valueType=\"short\"\n                                                                            style={{ width: \"100%\" }}\n                                                                            className=\"in_field form-control\"\n                                                                            value={value}\n                                                                            onClick={val => { console.log(formik_object) }}\n                                                                            onBlur={\n                                                                                val => setFieldTouched(`residency.country`)\n                                                                            }\n                                                                            onChange={val => { console.log(formik_object); setFieldValue(`residency.country`, val) }} />\n                                                                    )\n                                                                }}\n                                                            </Field>\n                                                            <ErrorMessage name='residency.country' component={TextError} />\n                                                        </div>\n                                                    </Col>\n\n                                                    <Col lg=\"4\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"residency.region\" className=\"form_text\">region/city </label>\n                                                            <Field name=\"residency.region\" className=\"form-control in_field\" >\n                                                                {({ form, field }) => {\n                                                                    const { setFieldValue } = form\n                                                                    const value = field.value\n                                                                    return (\n                                                                        <RegionDropdown\n                                                                            country={formik_object.values.residency.country}\n                                                                            style={{ width: \"100%\" }}\n                                                                            className=\"in_field form-control\"\n                                                                            value={value}\n                                                                            countryValueType=\"short\"\n                                                                            onChange={val => setFieldValue(`residency.region`, val)} />\n                                                                    )\n                                                                }}\n                                                            </Field>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end \">\n                                                    <Col lg=\"8\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"address\" className=\"form_text\">address </label>\n                                                            <Field name=\"address\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='address' component={TextError} />\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n\n                                            <div id=\"undergrad_info_section \">\n                                                <Row >\n                                                    <Col xs=\"12\" className=\"\" >\n                                                        <div\n                                                            style={{\n                                                                textAlign: \"left\",\n                                                                marginTop: \"50px\",\n                                                                marginBottom: \"50px\",\n                                                                borderBottomStyle: 'solid',\n                                                                borderBottomWidth: \"0.5px\",\n                                                                borderBottomColor: \" #C5BCBC\"\n                                                            }} className=\"form_section_title\"\n                                                        >\n                                                            undergrad info\n                                    </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col lg=\"8\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"zc_id\" className=\"form_text\">Your ZC ID </label>\n                                                            <Field name=\"zc_id\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='zc_id' component={TextError} />\n\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col lg=\"8\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"grad_year\" className=\"form_text\">graduation year </label>\n                                                            <Field name=\"grad_year\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='grad_year' component={TextError} />\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col lg=\"4\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"major\" className=\"form_text\">Major </label>\n                                                            <Field name=\"major\" as=\"select\" className=\"form-control in_field\">\n                                                                <option value=\"\">Select major</option>\n                                                                <option value=\"environmental engineering\">Environmental engineering</option>\n                                                                <option value=\"nanotechnology engineering\">Nanotechnology engineering</option>\n                                                                <option value=\"renewable energy engineering\">Renewable energy engineering</option>\n                                                                <option value=\"Aerospace engineering\">Aerospace engineering</option>\n                                                                <option value=\"communications engineering\">Communications engineering</option>\n                                                                <option value=\"biomedical science\">Biomedical science</option>\n                                                                <option value=\"materials science\">Materials science</option>\n                                                                <option value=\"nanoscience\">Nanoscience</option>\n                                                                <option value=\"physics of the earth and universe\">physics of the earth and universe</option>\n                                                            </Field>\n                                                            <ErrorMessage name='major' component={TextError} />\n                                                        </div>\n                                                    </Col>\n                                                    <Col lg=\"4\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"minor\" className=\"form_text\">minor\n                                            <span style={{ color: \"#0091AC\", fontWeight: \"bolder\", fontSize: \"11\" }}>{\" (Optional)\"}</span>\n                                                            </label>\n                                                            <Field name=\"minor\" as=\"select\" className=\"form-control in_field\">\n                                                                <option value=\"\">Select minor</option>\n                                                                <option value=\"environmental engineering\">environmental engineering</option>\n                                                                <option value=\"nanotechnology engineering\">nanotechnology engineering</option>\n                                                                <option value=\"renewable energy engineering\">renewable energy engineering</option>\n                                                                <option value=\"Aerospace engineering\">Aerospace engineering</option>\n                                                                <option value=\"communications engineering\">communications engineering</option>\n                                                                <option value=\"biomedical science\">biomedical science</option>\n                                                                <option value=\"materials science\">materials science</option>\n                                                                <option value=\"nanoscience\">nanoscience</option>\n                                                                <option value=\"physics of the earth and universe\">physics of the earth and universe</option>\n                                                            </Field>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col lg=\"8\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"other_undergraduate_data\" className=\"form_text\">Others\n                                            <span style={{ color: \"#0091AC\", fontWeight: \"bolder\", fontSize: \"11\" }}>{\" (Optional)\"}</span>\n                                                            </label>\n                                                            <Field name=\"other_undergraduate_data\" className=\"form-control in_field\" type=\"text\" />\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n\n                                            <div id=\"career_info_section \">\n                                                <Row >\n                                                    <Col xs=\"12\" className=\"\" >\n                                                        <div\n                                                            style={{\n                                                                textAlign: \"left\",\n                                                                marginTop: \"50px\",\n                                                                marginBottom: \"50px\",\n                                                                borderBottomStyle: 'solid',\n                                                                borderBottomWidth: \"0.5px\",\n                                                                borderBottomColor: \" #C5BCBC\"\n                                                            }} className=\"form_section_title\"\n                                                        >\n                                                            career info\n                                    </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end \">\n                                                    <Col lg=\"8\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"exp_field\" className=\"form_text\">field of experience </label>\n                                                            <Field name=\"exp_field\" as=\"select\" className=\"form-control in_field\"\n                                                                onClick={() => console.log(formik_object.errors)}\n                                                            >\n                                                                <option value=\"\">Select field of experience</option>\n                                                                <option value=\"software engineering\">software engineering</option>\n                                                                <option value=\"model based design\">model based design</option>\n                                                                <option value=\"computational biology\">computational biology</option>\n                                                                <option value=\"other\">other</option>\n                                                            </Field>\n                                                            <ErrorMessage name='exp_field' component={TextError} />\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                {formik_object.values.exp_field === \"other\" &&\n                                                    <Row className=\"justify-content-end \">\n                                                        <Col lg=\"8\">\n                                                            <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                                <label htmlFor=\"new_exp_field\" className=\"form_text\"> type your field of experience </label>\n                                                                <Field name=\"new_exp_field\" type=\"text\" className=\"form-control in_field\">\n                                                                </Field>\n                                                                <ErrorMessage name='new_exp_field' component={TextError} />\n\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                }\n                                                <Row id=\"universities_card\" className=\"justify-content-end\" style={{ marginTop: \"50px\" }}>\n                                                    <Col lg=\"8\" >\n                                                        <div className=\" from_group_box\">\n                                                            <div className=\"form_text3 \" >Universities\n                                            <div style={{ color: \"#ADE3ED\", fontWeight: \"bolder\", fontSize: \"15px\", letterSpacing: \".1em\" }}>{\" (Optional)\"}</div>\n                                                            </div>\n                                                            <div className=\"form_text4 \" >What universities other than ZC have you visted?</div>\n                                                            <div className=\"d-flex \">\n                                                                <div className=\"form-group mx-3  ml-lg-4 \" style={{ width: \"100%\" }}>\n                                                                    <FieldArray name='universities'>\n                                                                        {fieldArrayProps => {\n                                                                            const { push, remove, form } = fieldArrayProps\n                                                                            const { values } = form\n                                                                            const { universities } = values\n                                                                            return (\n                                                                                <div>\n                                                                                    {universities.map((phNumber, index) => (\n                                                                                        <div className=\"d-flex mt-5 mx-4 mt-lg-4 mx-lg-0\">\n                                                                                            <div key={index} style={{ width: \"100%\" }}>\n                                                                                                <CollapsingCardComponent index={index} remove={remove} />\n                                                                                            </div>\n                                                                                            <div className=\"form-group  my-0 d-none d-lg-flex\"\n                                                                                                style={{ width: \"70px\", color: \"grey\", fontSize: \"30px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}\n                                                                                            >\n                                                                                                {\n                                                                                                    // index > 0 &&\n                                                                                                    (\n                                                                                                        <div className=\"trash_icon\" title={`delete university ${index}`} style={{}} onClick={() => remove(index)}>\n                                                                                                            <FontAwesomeIcon icon={faTrashAlt} className=\"pt-1\" />\n                                                                                                        </div>\n                                                                                                    )}\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    ))}\n                                                                                    < div style={{ display: \"flex\", justifyContent: \"center\", fontSize: \"40px\", flexDirection: \"column\", justifyItems: \"center\", alignItems: \"center\" }}>\n                                                                                        <div onClick={() => push('')} type=\"button\" class=\"  plus_button \">\n                                                                                            <FontAwesomeIcon icon={faPlus} />\n                                                                                        </div>\n                                                                                        <div className=\"plus_button_text\">\n                                                                                            Add more universities\n                                                                        </div>\n                                                                                    </div >\n                                                                                </div>\n                                                                            )\n                                                                        }}\n                                                                    </FieldArray>\n\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row id=\"entities_card\" className=\"justify-content-end\" style={{ marginTop: \"50px\" }}>\n                                                    <Col lg=\"8\" >\n                                                        <div className=\" from_group_box\">\n                                                            <div className=\"form_text3 \" >{'compamies & organizations '}\n                                                                <div style={{ color: \"#ADE3ED\", fontWeight: \"bolder\", fontSize: \"15px\", letterSpacing: \".1em\" }}>{\" (Optional)\"}</div>\n                                                            </div>\n                                                            <div className=\"form_text4 \" >What entites did you visit during your career?</div>\n                                                            <div className=\"d-flex \">\n                                                                <div className=\"form-group mx-3  ml-lg-4 \" style={{ width: \"100%\" }}>\n                                                                    <FieldArray name='entities'>\n                                                                        {fieldArrayProps => {\n                                                                            const { push, remove, form } = fieldArrayProps\n                                                                            const { values } = form\n                                                                            const { entities } = values\n\n                                                                            return (\n                                                                                <div>\n                                                                                    {entities.map((phNumber, index) => (\n                                                                                        <div className=\"d-flex mt-4\">\n                                                                                            <div key={index} style={{ width: \"100%\" }}>\n                                                                                                <CollapsingEntityCardComponent index={index} remove={remove} />\n                                                                                            </div>\n                                                                                            <div className=\"form-group  my-0 d-none d-lg-flex\"\n                                                                                                style={{ width: \"70px\", color: \"grey\", fontSize: \"30px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}\n                                                                                            >\n                                                                                                {\n                                                                                                    // index > 0 &&\n                                                                                                    (\n                                                                                                        <div className=\"trash_icon\" title={`delete entity ${index}`} style={{}} onClick={() => remove(index)}>\n                                                                                                            <FontAwesomeIcon icon={faTrashAlt} className=\"pt-1\" />\n                                                                                                        </div>\n                                                                                                    )}\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    ))}\n                                                                                    < div style={{ display: \"flex\", justifyContent: \"center\", fontSize: \"40px\", flexDirection: \"column\", justifyItems: \"center\", alignItems: \"center\" }}>\n                                                                                        <div onClick={() => push('')} type=\"button\" class=\"  plus_button \">\n                                                                                            <FontAwesomeIcon icon={faPlus} />\n                                                                                        </div>\n                                                                                        <div className=\"plus_button_text\">\n                                                                                            Add more entities\n                                                                        </div>\n                                                                                    </div >\n                                                                                </div>\n                                                                            )\n                                                                        }}\n                                                                    </FieldArray>\n\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div >\n\n                                            {/* <div style={{ height: \"100px\", marginTop: \"100px\" }}>{JSON.stringify(formik_object.values, null, 2)}</div> */}\n                                            <div className=\"\" style={{ marginTop: \"100px\", display: \"flex\", justifyContent: 'flex-end', alignItems: 'flex-end', }}>\n                                                <button style={{ marginBottom: \"100px\" }} type=\"submit\" className=\"btn btn-primary\" disabled={!formik_object.isValid} >{!formik_object.isValid ? \"form data not valid\" : \"Submit\"}</button>\n                                                {/* <div style={{ height: \"100px\", marginTop: \"100px\" }}>{JSON.stringify(formik_object.isValid, null, 2)}</div> */}\n                                            </div>\n\n                                        </Form>\n\n                                    </div>\n                                )\n                        }\n                    </Container>\n\n                )\n            }}\n        </Formik >\n\n    );\n};\n\nexport default FormComponent;","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/CollapsingUniCardComponent/CollapsingUniCardComponent.js",["204","205","206","207","208","209","210"],"import React, { useState } from 'react';\nimport { Container, Col, Row, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { Collapse, } from 'reactstrap';\nimport { FormText } from 'reactstrap';\nimport { Card, CardHeader, CardBody, } from 'reactstrap';\nimport \"./CollapsingUniCardComponent.css\"\nimport { Formik, Field, Form } from 'formik';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronCircleDown } from '@fortawesome/free-solid-svg-icons'\nimport DateView from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction CollapsingCardComponent(props) {\n    const index = props.index;\n\n    const [IsOpen, setIsOpen] = useState(false);\n\n\n\n\n    return (\n        <div>\n\n            <Card className=\"mt-1\">\n                <CardHeader className=\"session_card_head box_header p-0 d-flex m-0\" style={\n                    IsOpen ? {\n                        borderColor: 'rgb(38, 173, 203)',\n                        borderWidth: '.1px',\n                    }\n                        :\n\n                        { borderWidth: \"0px\" }\n                }>\n\n                    <div className=\"header_forms  mx-lg-3 \">\n                        <Container>\n                            <Row className=\"justify-content-start mt-2\">\n                                <Col lg=\"8\" className=\"pr-lg-1 px-2\">\n                                    <div className=\"form-group mb-1\" style={{ width: \"100%\" }}>\n                                        <label htmlFor={`university_${index}`} className=\"form_text mb-1\" >{`university ${index + 1} name`} </label>\n                                        <Field name={`universities[${index}].uni_name`} className=\"form-control in_field\" >\n                                            {/* <Field name={`university_${index}`} className=\"form-control in_field\" > */}\n                                        </Field>\n                                    </div>\n                                </Col>\n                                <Col lg=\"4\" className=\"pl-lg-1 px-2\">\n                                    <div className=\"form-group mb-1\" style={{ width: \"100%\" }}>\n                                        <label htmlFor={`universities[${index}].visit_type`} className=\"form_text mb-1\"> visit type </label>\n                                        <Field name={`universities[${index}].visit_type`} as=\"select\" className=\"form-control in_field mb-3 mb-lg-0\">\n                                            <option value=\"PHD\">PHD student</option>\n                                            <option value=\"Masters\">Masters student</option>\n                                            <option value=\"intern\">intern</option>\n                                            <option value=\"Others\">Others</option>\n                                        </Field>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                    <div className=\" header_buttons\">\n\n                        <div className=\"header_addinfo_button noselect\" onClick={() => setIsOpen(!IsOpen)} >\n                            <FontAwesomeIcon icon={faChevronCircleDown} className=\"pt-lg-0 pb-1 add_info_icon\" />\n                            <div className=\"add_info_text\" style={{ fontSize: \"10px\", marginTop: \"5px\", textAlign: \"center\", width: \"80%\" }}>add more info</div>\n                        </div>\n\n                        <div className=\"header_delete_button\" style={{}} onClick={() => props.remove(index)}>\n                            <FontAwesomeIcon icon={faTrashAlt} className=\"pt-1\" />\n                        </div>\n                    </div>\n\n\n\n                </CardHeader>\n\n                <Collapse isOpen={IsOpen} style={{\n                    borderColor: 'rgb(38, 173, 203)',\n                    borderStyle: 'dashed',\n                    borderWidth: '1.5px',\n                    borderTopWidth: '0px'\n                }}>\n                    <CardBody>\n                        <Container row>\n                            <Row>\n                                <Col sm={3} className=\"d-flex justify-content-md-end pr-0\">\n                                    <div htmlFor={`universities[${index}].major`} className=\"card_body_labels mb-1\">\n                                        <div>\n                                            Major\n                                        </div>\n\n                                    </div>\n                                </Col>\n                                <Col sm={9}>\n                                    <Field name={`universities[${index}].major`} className=\"form-control in_field\" >\n                                        {/* <Field name={`university_${index}`} className=\"form-control in_field\" > */}\n                                    </Field>\n                                </Col>\n                                <Col sm={3} className=\"d-flex justify-content-md-end pr-0\">\n                                    <div htmlFor={`universities[${index}].major`} className=\"card_body_labels mb-1\">\n                                        Graduation date\n                                    </div>\n                                </Col>\n                                <Col sm={9}>\n                                    {/* <Field name={`universities[${index}].major`} className=\"form-control in_field\" >\n                                    </Field> */}\n                                    <Field name={`universities[${index}].grad_date`} className=\"form-control in_field\" >\n                                        {({ form, field }) => {\n                                            const { setFieldValue } = form\n                                            const { value } = field\n                                            return (\n                                                <DateView className=\"form-control in_field\"\n                                                    style={{\n                                                        textAlign: \"end\"\n                                                    }}\n                                                    id={`universities[${index}].date`}\n                                                    {...field}\n                                                    selected={value}\n                                                    onChange={val => setFieldValue(`universities[${index}].grad_date`, val)}\n                                                />\n                                            )\n                                        }}\n                                    </Field>\n                                </Col>\n                                <Col sm={3} className=\"d-flex justify-content-md-end pr-0\">\n                                    <div htmlFor={`universities[${index}].linkedin`} className=\"card_body_labels mb-1\">\n                                        university linkedin page URL\n                                    </div>\n                                </Col>\n                                <Col sm={9}>\n                                    <Field name={`universities[${index}].linkedin`} className=\"form-control in_field\" >\n                                        {/* <Field name={`university_${index}`} className=\"form-control in_field\" > */}\n                                    </Field>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </CardBody>\n                </Collapse>\n            </Card>\n\n        </div>\n    )\n}\n\nexport default CollapsingCardComponent\n","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/CollapsingEntityCardComponent/CollapsingEntityCardComponent.js",["211","212","213","214","215","216","217","218","219"],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/TextError.js",[],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/GooglebtnComponent/GooglebtnComponent.js",["220","221"],"import React, { Component } from 'react'\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport \"./GooglebtnComponent.css\"\nimport zc_logo from '../../zc_logo.png'\nimport google_logo from './google_logo.png'\nimport { Alert } from 'reactstrap';\n\n\nconst CLIENT_ID = '1050309843237-hjb6hmp0ku18p9oblkk5fshpvp7g0v87.apps.googleusercontent.com';\n\n\nclass GooglebtnComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLogined: false,\n            accessToken: '',\n            show_alert: false\n\n        };\n\n        this.login = this.login.bind(this);\n        this.handleLoginFailure = this.handleLoginFailure.bind(this);\n        this.logout = this.logout.bind(this);\n        this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\n    }\n\n    login(response) {\n        console.log(response)\n        if (!response.profileObj.email.endsWith('@zewailcity.edu.eg')) {\n            this.setState({ show_alert: true });\n        }\n        if (response.accessToken && response.profileObj.email.endsWith('@zewailcity.edu.eg')) {\n            this.props.onclick(response)\n            this.setState({ show_alert: false });\n            // var xhr = new XMLHttpRequest();\n            // xhr.open('POST', 'http://localhost:5000');\n            // xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n            // xhr.onload = function () {\n            //     console.log('Signed in as: ' + xhr.responseText);\n            // };\n            // xhr.send('idtoken=' + response.tokenObj.id_token)\n            this.setState(state => ({\n                isLogined: true,\n                accessToken: response.accessToken\n            }));\n        }\n    }\n\n    logout(response) {\n        this.setState(state => ({\n            isLogined: false,\n            accessToken: ''\n        }));\n    }\n\n    handleLoginFailure(response) {\n        // alert('Failed to log in')\n    }\n\n    handleLogoutFailure(response) {\n        // alert('Failed to log out')\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{ marginTop: \"20px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", display: \"flex\", flexDirection: \"column\" }}>\n                    {\n                        <GoogleLogin\n                            style={{ width: \"300px\" }}\n                            clientId={CLIENT_ID}\n                            render={renderProps => (\n                                <button id=\"verify_button\"\n                                    onClick={renderProps.onClick}\n                                    disabled={renderProps.disabled}>\n                                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                        <span style={{ marginLeft: \"10px\" }}>verfiy with google</span>\n                                        <div style={{ flexGrow: \"1\" }}></div>\n                                        <img style={{ width: \"30px\", height: \"auto\", opacity: \"1\", justifySelf: \"end\", marginRight: \"7px\" }} src={google_logo} alt=\"logo\" />\n                                        <img style={{ width: \"30px\", height: \"auto\", opacity: \"1\", justifySelf: \"end\" }} src={zc_logo} alt=\"logo\" />\n                                    </div>\n                                </button>\n                            )}\n                            buttonText='Login'\n                            onSuccess={this.login}\n                            onFailure={this.handleLoginFailure}\n                            cookiePolicy={'single_host_origin'}\n                            responseType='code,token'\n                        />\n                    }\n                    {this.state.show_alert ?\n                        <Alert color=\"danger\" className=\"mt-3\" style={{ width: \"100%\" }}>\n                            you must use a zewailcity email\n                        </Alert> : null\n                    }\n                </div>\n\n            </React.Fragment>\n\n        )\n    }\n}\n\nexport default GooglebtnComponent;\n","/home/ganam/active_wsl_projects/ZCAA/frontend/src/ScrollToTopComponent.js",[],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/Network_diagramComponent/jparticle.jquery.js",["222","223","224","225","226","227"],"// import { $, jQuery } from 'jquery';\n\nexport default function initJParticle($) {\n\n\t\"use strict\";\n\n\tvar createParticlesSandbox, Utils;\n\n\tUtils = {};\n\n\t/*\n\t * Create jParticle animation.\n\t * @param {Object} options Few jParticle options.\n\t * @return {Object} jQuery object for chaining.\n\t */\n\t$.fn.jParticle = function jParticle(options) {\n\n\t\tthis.each(function (_, el) {\n\n\t\t\tif (typeof el.sandbox === 'object') {\n\n\t\t\t\t$(el).removeJParticle();\n\t\t\t}\n\n\t\t\tel.sandbox = createParticlesSandbox(el, options);\n\t\t});\n\n\t\treturn this;\n\t};\n\n\t/*\n\t * Remove jParticle canvas.\n\t * @return {Object} jQuery object for chaining.\n\t */\n\t$.fn.removeJParticle = function removeJParticle() {\n\n\t\tthis.each(function (_, el) {\n\n\t\t\tif (el.sandbox) {\n\n\t\t\t\tel.sandbox.remove();\n\t\t\t\tdelete el.sandbox;\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t};\n\n\t/*\n\t * Freeze jParticle animation.\n\t * @return {Object} jQuery object for chaining.\n\t */\n\t$.fn.freezeJParticle = function freezeJParticle() {\n\n\t\tthis.each(function (_, el) {\n\n\t\t\tif (el.sandbox) {\n\n\t\t\t\tel.sandbox.freeze();\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t};\n\n\t/*\n\t * Unfreeze jParticle animation.\n\t * @return {Object} jQuery object for chaining.\n\t */\n\t$.fn.unfreezeJParticle = function unfreezeJParticle() {\n\n\t\tthis.each(function (_, el) {\n\n\t\t\tif (el.sandbox) {\n\n\t\t\t\tel.sandbox.unfreeze();\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t};\n\n\t/*\n\t * Create a particles sandbox instance.\n\t * @param {Object} element Element for the sandbox.\n\t * @param {Object} params Few sandbox's params.\n\t * @return {Object} Particles sandbox object.\n\t */\n\tcreateParticlesSandbox = function createParticlesSandbox(element, params) {\n\n\t\tvar ParticlesSandbox, createParticle;\n\n\t\tParticlesSandbox = {};\n\n\t\tParticlesSandbox.canvas = {};\n\t\tParticlesSandbox.mouse = {};\n\t\tParticlesSandbox.particles = [];\n\n\t\tParticlesSandbox.isAnimated = false;\n\n\t\t/*\n\t\t * Initialize the sandbox\n\t\t * @param {Object} element Element for the sandbox.\n\t\t * @param {Object} params Few sandbox's params.\n\t\t */\n\t\tParticlesSandbox.initialize = function initialize(element, params) {\n\n\t\t\tParticlesSandbox.initParams(params);\n\t\t\tParticlesSandbox.initHTML(element);\n\t\t\tParticlesSandbox.initParticles();\n\t\t\tParticlesSandbox.initEvents();\n\t\t\tParticlesSandbox.initAnimation();\n\t\t};\n\n\t\t/*\n\t\t * Initialize sandbox's params.\n\t\t * @param {Object} params Few sandbox's params.\n\t\t */\n\t\tParticlesSandbox.initParams = function initParams(params) {\n\n\t\t\tif (params && params.color && (!params.particle || (params.particle && !params.particle.color))) {\n\n\t\t\t\tif (!params.particle) {\n\n\t\t\t\t\tparams.particle = {};\n\t\t\t\t}\n\n\t\t\t\tparams.particle.color = params.color;\n\t\t\t}\n\n\t\t\tParticlesSandbox.params = $.extend({\n\t\t\t\tparticlesNumber: 100,\n\t\t\t\tlinkDist: 50,\n\t\t\t\tcreateLinkDist: 150,\n\t\t\t\tdisableLinks: false,\n\t\t\t\tdisableMouse: false,\n\t\t\t\tbackground: 'black',\n\t\t\t\tcolor: 'white',\n\t\t\t\twidth: null,\n\t\t\t\theight: null,\n\t\t\t\tlinksWidth: 1\n\t\t\t}, params);\n\t\t};\n\n\t\t/*\n\t\t * Initialize the sandbox's html.\n\t\t * @param {Object} element Element for the sandbox.\n\t\t */\n\t\tParticlesSandbox.initHTML = function initHTML(element) {\n\n\t\t\tvar canvas;\n\n\t\t\tcanvas = ParticlesSandbox.canvas;\n\n\t\t\tcanvas.container = $(element);\n\t\t\tcanvas.element = $('<canvas/>');\n\n\t\t\tcanvas.context = canvas.element.get(0).getContext('2d');\n\n\t\t\tcanvas.container.append(canvas.element);\n\n\t\t\tcanvas.element.css('display', 'block');\n\n\t\t\tcanvas.element.get(0).width = (ParticlesSandbox.params.width) ? ParticlesSandbox.params.width : canvas.container.width();\n\t\t\tcanvas.element.get(0).height = (ParticlesSandbox.params.height) ? ParticlesSandbox.params.height : canvas.container.height();\n\n\t\t\tcanvas.element.css('background', ParticlesSandbox.params.background);\n\t\t};\n\n\t\t/*\n\t\t * Resize canvas.\n\t\t */\n\t\tParticlesSandbox.resize = function resize(width, height) {\n\t\t\tlet canvas = ParticlesSandbox.canvas;\n\t\t\tif (width) {\n\n\t\t\t\tcanvas.element.get(0).width = width;\n\t\t\t}\n\n\t\t\tif (height) {\n\n\t\t\t\tcanvas.element.get(0).height = height;\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Create all particles in the sandbox.\n\t\t */\n\t\tParticlesSandbox.initParticles = function initParticles() {\n\n\t\t\tvar i, count;\n\n\t\t\ti = 0;\n\t\t\tcount = ParticlesSandbox.params.particlesNumber;\n\n\t\t\tfor (; i < count; i += 1) {\n\n\t\t\t\tParticlesSandbox.particles.push(createParticle(\n\t\t\t\t\tParticlesSandbox.canvas.element.get(0),\n\t\t\t\t\tParticlesSandbox.params.particle\n\t\t\t\t));\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Initialize the sandbox's events.\n\t\t */\n\t\tParticlesSandbox.initEvents = function initEvents() {\n\n\t\t\tParticlesSandbox.canvas.element.mouseenter(function mouseEnterCallback() {\n\n\t\t\t\tParticlesSandbox.mouse.hoverCanvas = true;\n\n\t\t\t\tif (!ParticlesSandbox.isAnimated) {\n\n\t\t\t\t\tParticlesSandbox.draw();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tParticlesSandbox.canvas.element.mouseleave(function mouseLeaveCallback() {\n\n\t\t\t\tParticlesSandbox.mouse.hoverCanvas = false;\n\t\t\t});\n\n\t\t\tParticlesSandbox.canvas.element.mousemove(function mouseMoveCallback(e) {\n\n\t\t\t\tParticlesSandbox.mouse = $.extend(ParticlesSandbox.mouse, Utils.getMousePosition(e, ParticlesSandbox.canvas.element[0]));\n\t\t\t});\n\t\t};\n\n\t\t/*\n\t\t * Initialize the sandbox's animation.\n\t\t */\n\t\tParticlesSandbox.initAnimation = function initAnimation() {\n\n\t\t\twindow.requestAnimFrame =\n\t\t\t\twindow.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\twindow.ORequestAnimationFrame ||\n\t\t\t\twindow.msRequestAnimationFrame ||\n\n\t\t\t\tfunction requestAnimFrame(callback) {\n\n\t\t\t\t\tsetTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\n\t\t\tParticlesSandbox.isAnimated = true;\n\n\t\t\tParticlesSandbox.draw();\n\t\t};\n\n\t\t/*\n\t\t * Draw the sandbox canvas.\n\t\t */\n\t\tParticlesSandbox.draw = function draw() {\n\n\t\t\tvar i, j, count, canvas, particle, particle2;\n\n\t\t\ti = 0;\n\t\t\tcount = ParticlesSandbox.particles.length;\n\t\t\tcanvas = ParticlesSandbox.canvas;\n\n\t\t\tcanvas.context.clearRect(0, 0, canvas.element.get(0).width, canvas.element.get(0).height);\n\n\t\t\tfor (; i < count; i += 1) {\n\n\t\t\t\tparticle = ParticlesSandbox.particles[i];\n\n\t\t\t\tif (ParticlesSandbox.isAnimated) {\n\n\t\t\t\t\tparticle.update();\n\t\t\t\t}\n\n\t\t\t\tparticle.draw();\n\n\t\t\t\tif (!ParticlesSandbox.params.disableMouse && ParticlesSandbox.mouse.hoverCanvas) {\n\t\t\t\t\tParticlesSandbox.drawLink(\n\t\t\t\t\t\tparticle.getPosition('x'),\n\t\t\t\t\t\tparticle.getPosition('y'),\n\t\t\t\t\t\tParticlesSandbox.mouse.x,\n\t\t\t\t\t\tParticlesSandbox.mouse.y\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (!ParticlesSandbox.params.disableLinks) {\n\n\t\t\t\t\tfor (j = i + 1; j < count; j += 1) {\n\n\t\t\t\t\t\tparticle2 = ParticlesSandbox.particles[j];\n\n\t\t\t\t\t\tParticlesSandbox.drawLink(\n\t\t\t\t\t\t\tparticle.getPosition('x'),\n\t\t\t\t\t\t\tparticle.getPosition('y'),\n\t\t\t\t\t\t\tparticle2.getPosition('x'),\n\t\t\t\t\t\t\tparticle2.getPosition('y')\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tParticlesSandbox.requestID = window.requestAnimFrame(ParticlesSandbox.draw);\n\t\t};\n\n\t\t/*\n\t\t * Draw a link between two particles.\n\t\t * @param {int} x First object abscissa coords.\n\t\t * @param {int} y First object ordered coords.\n\t\t * @param {int} x2 Second object abscissa coords.\n\t\t * @param {int} y2 Second object ordered coords.\n\t\t */\n\t\tParticlesSandbox.drawLink = function drawLink(x, y, x2, y2) {\n\n\t\t\tvar context;\n\n\t\t\tif (Utils.getDistance(x, y, x2, y2) <= ParticlesSandbox.params.createLinkDist) {\n\n\t\t\t\tcontext = ParticlesSandbox.canvas.context;\n\n\t\t\t\tcontext.save();\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.lineWidth = ParticlesSandbox.params.linksWidth;\n\t\t\t\tcontext.moveTo(x, y);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.globalAlpha = ParticlesSandbox.getOpacityLink(x, y, x2, y2);\n\t\t\t\tcontext.strokeStyle = ParticlesSandbox.params.color;\n\t\t\t\tcontext.lineCap = 'round';\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.closePath();\n\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Get opacity for link two particles.\n\t\t * @param {int} x First object abscissa coords.\n\t\t * @param {int} y First object ordered coords.\n\t\t * @param {int} x2 Second object abscissa coords.\n\t\t * @param {int} y2 Second object ordered coords.\n\t\t * @return {int} 0 <= opacity <= 1\n\t\t */\n\t\tParticlesSandbox.getOpacityLink = function getOpacityLink(x, y, x2, y2) {\n\n\t\t\tvar dist, opacity, linkDist, createLinkDist;\n\n\t\t\tdist = Utils.getDistance(x, y, x2, y2);\n\t\t\tlinkDist = ParticlesSandbox.params.linkDist;\n\t\t\tcreateLinkDist = ParticlesSandbox.params.createLinkDist;\n\n\t\t\tif (dist <= linkDist) {\n\n\t\t\t\topacity = 1;\n\t\t\t} else if (dist > createLinkDist) {\n\n\t\t\t\topacity = 0;\n\t\t\t} else {\n\n\t\t\t\topacity = 1 - (((dist - linkDist) * 100) / (createLinkDist - linkDist)) / 100;\n\t\t\t}\n\n\t\t\treturn opacity;\n\t\t};\n\n\t\t/*\n\t\t * Freeze the animation.\n\t\t */\n\t\tParticlesSandbox.freeze = function freeze() {\n\n\t\t\tif (ParticlesSandbox.isAnimated) {\n\n\t\t\t\tParticlesSandbox.isAnimated = false;\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Unfreeze the animation.\n\t\t */\n\t\tParticlesSandbox.unfreeze = function unfreeze() {\n\n\t\t\tif (!ParticlesSandbox.isAnimated) {\n\n\t\t\t\tParticlesSandbox.isAnimated = true;\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t * Remove the animation's canvas.\n\t\t */\n\t\tParticlesSandbox.remove = function remove() {\n\n\t\t\tParticlesSandbox.canvas.element.remove();\n\t\t};\n\n\t\t/*\n\t\t * Create a particle instance.\n\t\t * @param {Object} canvas DOM element.\n\t\t * @param {Object} params Few particle's params.\n\t\t * @return {Object} Particle object.\n\t\t */\n\t\tcreateParticle = function createParticle(canvas, params) {\n\n\t\t\tvar Particle;\n\n\t\t\tParticle = {};\n\n\t\t\tParticle.canvas = {};\n\t\t\tParticle.vector = {};\n\n\t\t\t/*\n\t\t\t * Initialize the particle.\n\t\t\t * @param {Object} canvas DOM element.\n\t\t\t * @param {Object} params Few particle's params.\n\t\t\t */\n\t\t\tParticle.initialize = function initialize(canvas, params) {\n\n\t\t\t\tParticle.params = $.extend({\n\t\t\t\t\tcolor: 'white',\n\t\t\t\t\tminSize: 2,\n\t\t\t\t\tmaxSize: 4,\n\t\t\t\t\tspeed: 60\n\t\t\t\t}, params);\n\n\t\t\t\tParticle.setCanvasContext(canvas);\n\n\t\t\t\tParticle.initSize();\n\t\t\t\tParticle.initPosition();\n\t\t\t\tParticle.initVectors();\n\t\t\t};\n\n\t\t\t/*\n\t\t\t * Initialize particle's position.\n\t\t\t */\n\t\t\tParticle.initPosition = function initPosition() {\n\n\t\t\t\tParticle.x = Utils.getRandNumber(0 + Particle.radius, Particle.canvas.element.width - Particle.radius);\n\t\t\t\tParticle.y = Utils.getRandNumber(0 + Particle.radius, Particle.canvas.element.height - Particle.radius);\n\t\t\t};\n\n\t\t\t/*\n\t\t\t * Initialize particle's size.\n\t\t\t */\n\t\t\tParticle.initSize = function initSize() {\n\n\t\t\t\tParticle.size = Utils.getRandNumber(Particle.params.minSize, Particle.params.maxSize);\n\t\t\t\tParticle.radius = Particle.size / 2;\n\t\t\t};\n\n\t\t\t/*\n\t\t\t * Initialize particle's vectors for speed.\n\t\t\t */\n\t\t\tParticle.initVectors = function initVectors() {\n\n\t\t\t\tdo {\n\t\t\t\t\tParticle.vector.x = Utils.getRandNumber(-Particle.params.speed / 60, Particle.params.speed / 60, false);\n\t\t\t\t\tParticle.vector.y = Utils.getRandNumber(-Particle.params.speed / 60, Particle.params.speed / 60, false);\n\n\t\t\t\t} while (Particle.vector.x == 0 || Particle.vector.y == 0)\n\t\t\t};\n\n\t\t\t/*\n\t\t\t * Set the context to draw particles.\n\t\t\t * @param {Object} canvas Canvas.\n\t\t\t */\n\t\t\tParticle.setCanvasContext = function setCanvasContext(canvas) {\n\n\t\t\t\tvar context;\n\n\t\t\t\tParticle.canvas.element = canvas;\n\t\t\t\tcontext = canvas.getContext('2d');\n\n\t\t\t\tif (typeof context === 'object' && typeof context.canvas === 'object') {\n\n\t\t\t\t\tParticle.canvas.context = context;\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow \"Error: Can't set canvas context to Particle because context isn't a CanvasRenderingContext2D object.\";\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/*\n\t\t\t * Draw particle.\n\t\t\t */\n\t\t\tParticle.draw = function draw() {\n\n\t\t\t\tvar context = Particle.canvas.context;\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.arc(Particle.x, Particle.y, Particle.size / 2, 0, Math.PI * 2);\n\t\t\t\tcontext.fillStyle = Particle.params.color;\n\t\t\t\tcontext.fill();\n\t\t\t\tcontext.closePath();\n\t\t\t};\n\n\t\t\t/*\n\t\t\t * Update the particle's position.\n\t\t\t */\n\t\t\tParticle.update = function update() {\n\n\t\t\t\tParticle.x += Particle.vector.x;\n\t\t\t\tParticle.y += Particle.vector.y;\n\n\t\t\t\tif (0 > (Particle.x - Particle.radius) || (Particle.x + Particle.radius) > Particle.canvas.element.width) {\n\n\t\t\t\t\tParticle.vector.x = -Particle.vector.x;\n\t\t\t\t}\n\n\t\t\t\tif (0 > (Particle.y - Particle.radius) || (Particle.y + Particle.radius) > Particle.canvas.element.height) {\n\n\t\t\t\t\tParticle.vector.y = -Particle.vector.y;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/*\n\t\t\t * Return position of particle.\n\t\t\t * @param {string} axis Optionnal axis.\n\t\t\t * @return {int|Object} Return object if axis is not defined, else return int.\n\t\t\t */\n\t\t\tParticle.getPosition = function getPosition(axis) {\n\n\t\t\t\tif (typeof axis === 'string' && (axis != 'x' && axis != 'y')) {\n\n\t\t\t\t\taxis = null;\n\t\t\t\t}\n\n\t\t\t\treturn (typeof (axis) === 'string') ? Particle[axis] : { x: Particle.x, y: Particle.y };\n\t\t\t};\n\n\t\t\tParticle.initialize(canvas, params);\n\n\t\t\treturn {\n\t\t\t\tgetPosition: Particle.getPosition,\n\t\t\t\tupdate: Particle.update,\n\t\t\t\tdraw: Particle.draw\n\t\t\t};\n\t\t};\n\n\t\tParticlesSandbox.initialize(element, params);\n\n\t\treturn {\n\t\t\tremove: ParticlesSandbox.remove,\n\t\t\tfreeze: ParticlesSandbox.freeze,\n\t\t\tunfreeze: ParticlesSandbox.unfreeze,\n\t\t\tresize: ParticlesSandbox.resize\n\t\t};\n\t};\n\n\t/*\n\t * Get rand number between x and y.\n\t * @param {int} x Minimal number.\n\t * @param {int} y Maximal number.\n\t * @param {Boolean} round True is value shouldn't be round.\n\t * @return {int} Rand number.\n\t */\n\tUtils.getRandNumber = function getRandNumber(x, y, round) {\n\n\t\tvar value;\n\n\t\tif (x == null) {\n\n\t\t\tx = 0;\n\t\t}\n\n\t\tif (y == null) {\n\n\t\t\ty = 10;\n\t\t}\n\n\t\tif (round == null) {\n\n\t\t\tround = true;\n\t\t}\n\n\t\tvalue = Math.random() * (y - x) + x;\n\n\t\treturn (round) ? Math.round(value) : value;\n\t};\n\n\t/*\n\t * Get distance between to cartesian points.\n\t * @param {int} x First object abscissa coords.\n\t * @param {int} y First object ordered coords.\n\t * @param {int} x2 Second object abscissa coords.\n\t * @param {int} y2 Second object ordered coords.\n\t * @return {int} Distance.\n\t */\n\tUtils.getDistance = function getDistance(x, y, x2, y2) {\n\n\t\treturn Math.sqrt(Math.pow(x2 - x, 2) + Math.pow(y2 - y, 2));\n\t};\n\n\t/*\n\t * Get mouse position.\n\t * @param {Object} event The HTML DOM events.\n\t * @param {Object} element The DOM element.\n\t * @return {Object} x/y position.\n\t */\n\tUtils.getMousePosition = function getMousePosition(event, element) {\n\n\t\tvar rect;\n\n\t\tif (typeof element === 'undefined') {\n\n\t\t\telement = $('body')[0];\n\t\t}\n\n\t\trect = element.getBoundingClientRect();\n\n\t\treturn {\n\t\t\tx: event.clientX - rect.left,\n\t\t\ty: event.clientY - rect.top\n\t\t};\n\t};\n\n}\n","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/NewsComponent/NewsComponent.js",[],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/AdminComponent/AdminComponent.js",["228","229"],"import React, { Component, Fragment } from 'react'\n\nimport News_form from \"./News_form/News_form\";\n\n\nimport \"./AdminComponent.css\"\n\nexport default class AdminComponent extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n        return (\n            <Fragment>\n                <News_form />\n            </Fragment>\n\n        )\n    }\n}\n","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/NewsComponent/NewsPostViewComponent/NewsPostViewComponent.js",[],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/NewsComponent/NewsPostViewComponent/EditorComponent/EditorComponent.js",[],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/NewsComponent/NewsCardComponenet/NewsCardComponenet.js",["230","231"],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/AdminComponent/News_form/News_form.js",["232","233","234","235","236"],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/NewsComponent/NewsPostViewComponent/EditorComponent/editorJsTools.js",["237"],"// tools.js\nimport Embed from '@editorjs/embed'\nimport Table from '@editorjs/table'\n// import Paragraph from '@editorjs/paragraph'\nimport List from '@editorjs/list'\nimport LinkTool from '@editorjs/link'\nimport Image from '@editorjs/image'\nimport Header from '@editorjs/header'\nimport Marker from '@editorjs/marker'\nimport CheckList from '@editorjs/checklist'\nimport SimpleImage from '@editorjs/simple-image'\nimport ImageTool from '@editorjs/image';\nimport FontSize from 'editorjs-inline-font-size-tool'\nimport Underline from '@editorjs/underline';\nimport Paragraph from 'editorjs-paragraph-with-alignment';\n\n\nexport const EDITOR_JS_TOOLS = {\n  underline: Underline,\n\n  fontSize: FontSize,\n  embed: Embed,\n  table: Table,\n  paragraph: {\n    class: Paragraph,\n    inlineToolbar: ['link', 'marker', 'bold', 'italic', 'underline', 'fontSize']\n  },\n  list: List,\n  linkTool: LinkTool,\n  image: {\n    class: SimpleImage,\n    inlineToolbar: true,\n    config: {\n      placeholder: 'Paste image URL'\n    }\n  },\n  header: Header,\n  marker: Marker,\n  checklist: CheckList,\n  imageTool: {\n    class: ImageTool,\n    config: {\n      endpoints: {\n        byFile: 'http://localhost:5000/api/news/image_upload', // Your backend file uploader endpoint\n        byUrl: 'http://localhost:5000/api/news/image_upload2', // Your endpoint that provides uploading by Url\n      }\n    }\n  }\n}","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/AdminComponent/News_form/EditorComponent/EditorComponent.js",[],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/AdminComponent/News_form/EditorComponent/editorJsTools.js",["238"],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/contexts/helloContext.js",[],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/contexts/loginContext.js",["239","240"],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/shared/LoginModalComponenet/LoginModalComponenet.js",["241","242","243","244","245","246","247","248"],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/shared/LoginModalComponenet/GooglebtnComponent/GooglebtnComponent.js",["249","250"],{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":1,"column":32,"nodeType":"257","messageId":"258","endLine":1,"endColumn":44},{"ruleId":"255","severity":1,"message":"259","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":20},{"ruleId":"255","severity":1,"message":"260","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":30},{"ruleId":"255","severity":1,"message":"261","line":21,"column":20,"nodeType":"257","messageId":"258","endLine":21,"endColumn":26},{"ruleId":"262","severity":1,"message":"263","line":67,"column":8,"nodeType":"264","endLine":67,"endColumn":10,"suggestions":"265"},{"ruleId":"266","severity":1,"message":"267","line":118,"column":47,"nodeType":"268","endLine":121,"endColumn":27},{"ruleId":"255","severity":1,"message":"269","line":8,"column":12,"nodeType":"257","messageId":"258","endLine":8,"endColumn":19},{"ruleId":"255","severity":1,"message":"270","line":10,"column":13,"nodeType":"257","messageId":"258","endLine":10,"endColumn":18},{"ruleId":"271","severity":1,"message":"272","line":11,"column":97,"nodeType":"273","messageId":"274","endLine":11,"endColumn":103},{"ruleId":"255","severity":1,"message":"275","line":8,"column":26,"nodeType":"257","messageId":"258","endLine":8,"endColumn":30},{"ruleId":"255","severity":1,"message":"276","line":8,"column":37,"nodeType":"257","messageId":"258","endLine":8,"endColumn":46},{"ruleId":"255","severity":1,"message":"277","line":8,"column":48,"nodeType":"257","messageId":"258","endLine":8,"endColumn":53},{"ruleId":"255","severity":1,"message":"278","line":8,"column":55,"nodeType":"257","messageId":"258","endLine":8,"endColumn":60},{"ruleId":"255","severity":1,"message":"279","line":8,"column":62,"nodeType":"257","messageId":"258","endLine":8,"endColumn":68},{"ruleId":"255","severity":1,"message":"280","line":11,"column":8,"nodeType":"257","messageId":"258","endLine":11,"endColumn":19},{"ruleId":"255","severity":1,"message":"281","line":15,"column":8,"nodeType":"257","messageId":"258","endLine":15,"endColumn":13},{"ruleId":"255","severity":1,"message":"282","line":20,"column":8,"nodeType":"257","messageId":"258","endLine":20,"endColumn":28},{"ruleId":"255","severity":1,"message":"283","line":21,"column":10,"nodeType":"257","messageId":"258","endLine":21,"endColumn":19},{"ruleId":"255","severity":1,"message":"284","line":25,"column":28,"nodeType":"257","messageId":"258","endLine":25,"endColumn":38},{"ruleId":"255","severity":1,"message":"285","line":25,"column":61,"nodeType":"257","messageId":"258","endLine":25,"endColumn":69},{"ruleId":"255","severity":1,"message":"286","line":29,"column":27,"nodeType":"257","messageId":"258","endLine":29,"endColumn":33},{"ruleId":"255","severity":1,"message":"287","line":29,"column":35,"nodeType":"257","messageId":"258","endLine":29,"endColumn":41},{"ruleId":"255","severity":1,"message":"288","line":29,"column":43,"nodeType":"257","messageId":"258","endLine":29,"endColumn":48},{"ruleId":"266","severity":1,"message":"289","line":35,"column":13,"nodeType":"268","endLine":35,"endColumn":57},{"ruleId":"290","severity":1,"message":"291","line":48,"column":25,"nodeType":"268","endLine":48,"endColumn":112},{"ruleId":"290","severity":1,"message":"291","line":73,"column":25,"nodeType":"268","endLine":73,"endColumn":112},{"ruleId":"255","severity":1,"message":"292","line":16,"column":13,"nodeType":"257","messageId":"258","endLine":16,"endColumn":14},{"ruleId":"255","severity":1,"message":"293","line":9,"column":7,"nodeType":"257","messageId":"258","endLine":9,"endColumn":15},{"ruleId":"294","severity":1,"message":"295","line":57,"column":52,"nodeType":"296","messageId":"274","endLine":57,"endColumn":54},{"ruleId":"294","severity":1,"message":"295","line":72,"column":79,"nodeType":"296","messageId":"274","endLine":72,"endColumn":81},{"ruleId":"255","severity":1,"message":"297","line":80,"column":13,"nodeType":"257","messageId":"258","endLine":80,"endColumn":28},{"ruleId":"294","severity":1,"message":"295","line":80,"column":58,"nodeType":"296","messageId":"274","endLine":80,"endColumn":60},{"ruleId":"298","severity":1,"message":"299","line":129,"column":13,"nodeType":"300","endLine":145,"endColumn":15},{"ruleId":"298","severity":1,"message":"299","line":13,"column":45,"nodeType":"300","endLine":13,"endColumn":159},{"ruleId":"255","severity":1,"message":"301","line":2,"column":23,"nodeType":"257","messageId":"258","endLine":2,"endColumn":35},{"ruleId":"271","severity":1,"message":"302","line":70,"column":115,"nodeType":"273","messageId":"274","endLine":70,"endColumn":122},{"ruleId":"251","replacedBy":"303"},{"ruleId":"253","replacedBy":"304"},{"ruleId":"255","severity":1,"message":"305","line":5,"column":27,"nodeType":"257","messageId":"258","endLine":5,"endColumn":38},{"ruleId":"294","severity":1,"message":"295","line":54,"column":26,"nodeType":"296","messageId":"274","endLine":54,"endColumn":28},{"ruleId":"255","severity":1,"message":"306","line":69,"column":12,"nodeType":"257","messageId":"258","endLine":69,"endColumn":23},{"ruleId":"255","severity":1,"message":"307","line":70,"column":12,"nodeType":"257","messageId":"258","endLine":70,"endColumn":25},{"ruleId":"255","severity":1,"message":"308","line":76,"column":17,"nodeType":"257","messageId":"258","endLine":76,"endColumn":26},{"ruleId":"255","severity":1,"message":"309","line":87,"column":17,"nodeType":"257","messageId":"258","endLine":87,"endColumn":25},{"ruleId":"255","severity":1,"message":"276","line":2,"column":31,"nodeType":"257","messageId":"258","endLine":2,"endColumn":40},{"ruleId":"255","severity":1,"message":"277","line":2,"column":42,"nodeType":"257","messageId":"258","endLine":2,"endColumn":47},{"ruleId":"255","severity":1,"message":"278","line":2,"column":49,"nodeType":"257","messageId":"258","endLine":2,"endColumn":54},{"ruleId":"255","severity":1,"message":"279","line":2,"column":56,"nodeType":"257","messageId":"258","endLine":2,"endColumn":62},{"ruleId":"255","severity":1,"message":"310","line":4,"column":10,"nodeType":"257","messageId":"258","endLine":4,"endColumn":18},{"ruleId":"255","severity":1,"message":"311","line":7,"column":10,"nodeType":"257","messageId":"258","endLine":7,"endColumn":16},{"ruleId":"255","severity":1,"message":"275","line":7,"column":25,"nodeType":"257","messageId":"258","endLine":7,"endColumn":29},{"ruleId":"255","severity":1,"message":"276","line":2,"column":31,"nodeType":"257","messageId":"258","endLine":2,"endColumn":40},{"ruleId":"255","severity":1,"message":"277","line":2,"column":42,"nodeType":"257","messageId":"258","endLine":2,"endColumn":47},{"ruleId":"255","severity":1,"message":"278","line":2,"column":49,"nodeType":"257","messageId":"258","endLine":2,"endColumn":54},{"ruleId":"255","severity":1,"message":"279","line":2,"column":56,"nodeType":"257","messageId":"258","endLine":2,"endColumn":62},{"ruleId":"255","severity":1,"message":"310","line":4,"column":10,"nodeType":"257","messageId":"258","endLine":4,"endColumn":18},{"ruleId":"255","severity":1,"message":"311","line":7,"column":10,"nodeType":"257","messageId":"258","endLine":7,"endColumn":16},{"ruleId":"255","severity":1,"message":"275","line":7,"column":25,"nodeType":"257","messageId":"258","endLine":7,"endColumn":29},{"ruleId":"255","severity":1,"message":"312","line":13,"column":27,"nodeType":"257","messageId":"258","endLine":13,"endColumn":41},{"ruleId":"255","severity":1,"message":"313","line":13,"column":43,"nodeType":"257","messageId":"258","endLine":13,"endColumn":60},{"ruleId":"255","severity":1,"message":"301","line":2,"column":23,"nodeType":"257","messageId":"258","endLine":2,"endColumn":35},{"ruleId":"271","severity":1,"message":"302","line":69,"column":115,"nodeType":"273","messageId":"274","endLine":69,"endColumn":122},{"ruleId":"314","severity":1,"message":"315","line":5,"column":2,"nodeType":"316","messageId":"317","endLine":5,"endColumn":15,"fix":"318"},{"ruleId":"294","severity":1,"message":"295","line":459,"column":32,"nodeType":"296","messageId":"274","endLine":459,"endColumn":34},{"ruleId":"294","severity":1,"message":"295","line":459,"column":58,"nodeType":"296","messageId":"274","endLine":459,"endColumn":60},{"ruleId":"319","severity":1,"message":"320","line":478,"column":6,"nodeType":"321","messageId":"322","endLine":478,"endColumn":115},{"ruleId":"294","severity":1,"message":"323","line":522,"column":43,"nodeType":"296","messageId":"274","endLine":522,"endColumn":45},{"ruleId":"294","severity":1,"message":"323","line":522,"column":58,"nodeType":"296","messageId":"274","endLine":522,"endColumn":60},{"ruleId":"324","severity":1,"message":"325","line":9,"column":5,"nodeType":"326","messageId":"327","endLine":11,"endColumn":6},{"ruleId":"266","severity":1,"message":"328","line":17,"column":17,"nodeType":"268","endLine":17,"endColumn":30},{"ruleId":"255","severity":1,"message":"329","line":16,"column":12,"nodeType":"257","messageId":"258","endLine":16,"endColumn":22},{"ruleId":"255","severity":1,"message":"330","line":18,"column":12,"nodeType":"257","messageId":"258","endLine":18,"endColumn":24},{"ruleId":"255","severity":1,"message":"331","line":20,"column":12,"nodeType":"257","messageId":"258","endLine":20,"endColumn":24},{"ruleId":"255","severity":1,"message":"270","line":24,"column":13,"nodeType":"257","messageId":"258","endLine":24,"endColumn":18},{"ruleId":"255","severity":1,"message":"332","line":24,"column":20,"nodeType":"257","messageId":"258","endLine":24,"endColumn":30},{"ruleId":"255","severity":1,"message":"333","line":24,"column":39,"nodeType":"257","messageId":"258","endLine":24,"endColumn":55},{"ruleId":"255","severity":1,"message":"261","line":24,"column":57,"nodeType":"257","messageId":"258","endLine":24,"endColumn":63},{"ruleId":"255","severity":1,"message":"334","line":7,"column":8,"nodeType":"257","messageId":"258","endLine":7,"endColumn":13},{"ruleId":"255","severity":1,"message":"334","line":7,"column":8,"nodeType":"257","messageId":"258","endLine":7,"endColumn":13},{"ruleId":"255","severity":1,"message":"335","line":10,"column":12,"nodeType":"257","messageId":"258","endLine":10,"endColumn":16},{"ruleId":"255","severity":1,"message":"336","line":11,"column":12,"nodeType":"257","messageId":"258","endLine":11,"endColumn":35},{"ruleId":"255","severity":1,"message":"332","line":13,"column":20,"nodeType":"257","messageId":"258","endLine":13,"endColumn":30},{"ruleId":"255","severity":1,"message":"337","line":13,"column":32,"nodeType":"257","messageId":"258","endLine":13,"endColumn":37},{"ruleId":"255","severity":1,"message":"338","line":15,"column":12,"nodeType":"257","messageId":"258","endLine":15,"endColumn":17},{"ruleId":"255","severity":1,"message":"339","line":15,"column":19,"nodeType":"257","messageId":"258","endLine":15,"endColumn":27},{"ruleId":"255","severity":1,"message":"340","line":16,"column":12,"nodeType":"257","messageId":"258","endLine":16,"endColumn":33},{"ruleId":"255","severity":1,"message":"341","line":17,"column":12,"nodeType":"257","messageId":"258","endLine":17,"endColumn":25},{"ruleId":"255","severity":1,"message":"342","line":18,"column":12,"nodeType":"257","messageId":"258","endLine":18,"endColumn":24},{"ruleId":"255","severity":1,"message":"309","line":27,"column":17,"nodeType":"257","messageId":"258","endLine":27,"endColumn":25},{"ruleId":"255","severity":1,"message":"301","line":2,"column":23,"nodeType":"257","messageId":"258","endLine":2,"endColumn":35},{"ruleId":"271","severity":1,"message":"302","line":68,"column":115,"nodeType":"273","messageId":"274","endLine":68,"endColumn":122},"no-native-reassign",["343"],"no-negated-in-lhs",["344"],"no-unused-vars","'LoginContext' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'LoginContextProvider' is defined but never used.","'logout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'check_if_logged_in'. Either include it or remove the dependency array.","ArrayExpression",["345"],"react/jsx-pascal-case","Imported JSX component News_post_with_id must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'members' is assigned a value but never used.","'login' is assigned a value but never used.","no-dupe-keys","Duplicate key 'filter'.","ObjectExpression","unexpected","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'helmy_image' is defined but never used.","'logo2' is defined but never used.","'welcome_illustration' is defined but never used.","'VectorMap' is defined but never used.","'CardFooter' is defined but never used.","'CardText' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","Imported JSX component Network_diagramComponent must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'y' is assigned a value but never used.","'markers2' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'hovered_country' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'GoogleLogout' is defined but never used.","Duplicate key 'display'.",["343"],["344"],"'useCallback' is defined but never used.","'Fetch_error' is assigned a value but never used.","'Error_message' is assigned a value but never used.","'set_gdata' is assigned a value but never used.","'id_token' is assigned a value but never used.","'FormText' is defined but never used.","'Formik' is defined but never used.","'RegionDropdown' is defined but never used.","'CountryRegionData' is defined but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"346","text":"347"},"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","Expected '!==' and instead saw '!='.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","Imported JSX component News_form must be in PascalCase or SCREAMING_SNAKE_CASE","'IsDeleting' is assigned a value but never used.","'ErrorMessage' is assigned a value but never used.","'SubmitFailed' is assigned a value but never used.","'IsLoggedIn' is assigned a value but never used.","'ToggleLoginModal' is assigned a value but never used.","'Image' is defined but never used.","'User' is assigned a value but never used.","'Expirateion_date_string' is assigned a value but never used.","'Token' is assigned a value but never used.","'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","'Response_json_content' is assigned a value but never used.","'Fetch_success' is assigned a value but never used.","'Sending_data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"348","fix":"349"},[85,98],"","Update the dependencies array to be: [check_if_logged_in]",{"range":"350","text":"351"},[2744,2746],"[check_if_logged_in]"]