[{"/home/ganam/active_wsl_projects/ZCAA/frontend/src/index.js":"1","/home/ganam/active_wsl_projects/ZCAA/frontend/src/App.js":"2","/home/ganam/active_wsl_projects/ZCAA/frontend/src/reportWebVitals.js":"3","/home/ganam/active_wsl_projects/ZCAA/frontend/src/mainComponent.js":"4","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/AboutComponent/AboutComponent.js":"5","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/shared/NavbarComponent/NavbarComponent.js":"6","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/shared/FooterComponent/FooterComponent.js":"7","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/homeComponent.js":"8","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/AboutComponent/MemberCardComponent/MemberCardComponent.js":"9","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/Network_diagramComponent/Network_diagramComponent.js":"10","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/MapComponent/MapComponent.js":"11","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/NewsCardComponent/NewsCardComponent.js":"12","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/LoginComponent.js":"13","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/GooglebtnComponent/GooglebtnComponent.js":"14","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/DatePickerComponent/DatePickerComponent.js":"15","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/DatePickerComponent/TextError.js":"16","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/FormComponent.js":"17","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/CollapsingUniCardComponent/CollapsingUniCardComponent.js":"18","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/CollapsingEntityCardComponent/CollapsingEntityCardComponent.js":"19","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/TextError.js":"20","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/GooglebtnComponent/GooglebtnComponent.js":"21","/home/ganam/active_wsl_projects/ZCAA/frontend/src/ScrollToTopComponent.js":"22"},{"size":547,"mtime":1609441123363,"results":"23","hashOfConfig":"24"},{"size":212,"mtime":1609438703713,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1609434368833,"results":"26","hashOfConfig":"24"},{"size":1817,"mtime":1610269296080,"results":"27","hashOfConfig":"24"},{"size":6256,"mtime":1610273075860,"results":"28","hashOfConfig":"24"},{"size":2910,"mtime":1610272635260,"results":"29","hashOfConfig":"24"},{"size":564,"mtime":1609561919292,"results":"30","hashOfConfig":"24"},{"size":8365,"mtime":1610269029340,"results":"31","hashOfConfig":"24"},{"size":1627,"mtime":1609565722652,"results":"32","hashOfConfig":"24"},{"size":358,"mtime":1609533673084,"results":"33","hashOfConfig":"24"},{"size":4931,"mtime":1609955531863,"results":"34","hashOfConfig":"24"},{"size":1595,"mtime":1609558642032,"results":"35","hashOfConfig":"24"},{"size":1140,"mtime":1610250289292,"results":"36","hashOfConfig":"24"},{"size":4074,"mtime":1610272375070,"results":"37","hashOfConfig":"24"},{"size":867,"mtime":1610050817905,"results":"38","hashOfConfig":"24"},{"size":138,"mtime":1610076383463,"results":"39","hashOfConfig":"24"},{"size":49555,"mtime":1610272629510,"results":"40","hashOfConfig":"24"},{"size":7724,"mtime":1610089746883,"results":"41","hashOfConfig":"24"},{"size":10682,"mtime":1610090531313,"results":"42","hashOfConfig":"24"},{"size":181,"mtime":1610094958673,"results":"43","hashOfConfig":"24"},{"size":4061,"mtime":1610197371297,"results":"44","hashOfConfig":"24"},{"size":388,"mtime":1610269954650,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"j4gnmb",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"87"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"48"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/home/ganam/active_wsl_projects/ZCAA/frontend/src/index.js",[],["106","107"],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/App.js",["108"],"import logo from './logo.svg';\nimport './App.css';\nimport MainComponent from \"./mainComponent\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainComponent />\n    </div>\n  );\n}\n\nexport default App;\n","/home/ganam/active_wsl_projects/ZCAA/frontend/src/reportWebVitals.js",[],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/mainComponent.js",["109","110","111","112","113"],"\nimport React, { useState, useCallback, useEffect } from 'react'\nimport HomeComponent from './components/pages/homeComponent/homeComponent'\nimport AboutComponent from './components/pages/AboutComponent/AboutComponent'\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport NavbarComponent from './components/shared/NavbarComponent/NavbarComponent'\nimport FooterComponent from './components/shared/FooterComponent/FooterComponent'\nimport LoginComponent from './components/pages/LoginComponent/LoginComponent'\n\nimport ScrollToTopComponent from \"./ScrollToTopComponent\"\nexport default function MainComponent() {\n\n    const [LoggedIn, setLoggedIn] = useState(false);\n    const loggedin_context = React.createContext({ loggedIn: false, login_function: () => { } });\n\n    const login_function = () => {\n        setLoggedIn(true)\n    }\n    return (\n        <div id=\"main_component\">\n            <div id=\"content_wrap\">\n                <loggedin_context.Provider value={LoggedIn} >\n                    <Router >\n                        <ScrollToTopComponent />\n                        <NavbarComponent />\n                        {/* the navbar has to be inside the router since it uses LINK component which runs only inside router component */}\n\n                        <Route exact path=\"/\">\n                            <HomeComponent />\n                        </Route>\n                        <Route exact path=\"/ABOUTUS\">\n                            <AboutComponent />\n                        </Route>\n                        <Route exact path=\"/LOGIN\">\n                            <LoginComponent />\n                        </Route>\n                    </Router>\n                </loggedin_context.Provider>\n            </div>\n            <FooterComponent />\n\n        </div >\n\n    )\n}\n\n","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/AboutComponent/AboutComponent.js",["114"],"import React, { useEffect, useState } from 'react'\nimport { Container, Row, Col } from 'reactstrap'\nimport \"./AboutComponent.css\"\nimport logo from './logo.png'\nimport MemberCardComponent from \"./MemberCardComponent/MemberCardComponent\"\nexport default function AboutComponent() {\n    const [members, setMembers] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [members_views, setmembers_views] = useState(<div>empty</div>);\n\n\n    useEffect(() => {\n        setTimeout(() => {\n            const fetched_members = [\n                { name: \"youssef\", image: \"1-min.jpg\", role: \"active member\" },\n                { name: \"Hashem\", image: \"Hashem-min.jpg\", role: \"active member\" },\n                { name: \"Hatem\", image: \"DSC_0255-min.JPG\", role: \"active member\" },\n                { name: \"Ziad\", image: \"ziad.jpg\", role: \"active member\" },\n            ]\n            setMembers(fetched_members);\n            let members_views = fetched_members.map((member, index) => {\n                let card_color = \"#7FD8E9\"\n                if (index % 2 === 0) {\n                    card_color = \"#7FD8E9\"\n                }\n                else {\n                    card_color = \"rgb(127 216 233 / 33%)\"\n                }\n                return (\n                    <Col md=\"2\" className=\"\" >\n                        <MemberCardComponent background_color={card_color} img={`/team_members_images/${member.image}`} name={member.name} role={member.role} />\n                    </Col>\n                )\n            })\n            setmembers_views(members_views)\n            setLoading(false);\n        }, 1000)\n    }, [])\n    return (\n        <React.Fragment>\n            <Container id=\"mission_vision_container\">\n                <Row style={{ marginTop: \"60px\", marginBottom: \"10px\" }}>\n                    <Col md=\"9\">\n                        <span id='about_header' >OUR  mission:</span>\n                        <div id=\"mission_text\">               Our mission is supporting Zewail City in its pursuit of excellence and building a place for\n                        the Alumni to keep ties with their alma mater by supporting their needs, elevating their\n                        connections, and assisting their career’s development. As Zewail City’s alumni\n                        association, we are intrigued to do our duties as Zewail City’s advocates for alumni in\n                        Egypt and abroad so all of us can give back to our community and country. Moreover,\n                        we look forward to facilitating alumni engagement in Zewail City and providing projects\n                        that help in the development of science and technology in Egypt. The association also\n                        serves as a channel of communication representing all alumni with Zewail City’s current\n                        students and administration to contribute to improve the education and research\n                        quality.\n                        We aspire to inspire young Zewailians and support their journey to help them\n                        gain the unique ZC spirit that Dr. Zewail instilled in each of us.\n                    </div>\n                    </Col>\n                    <Col md=\"3\" className=\"d-none d-md-block\">\n                        <img style={{ width: \"100%\", height: \"auto\", position: \"sticky\", top: 0 }} src={logo} id=\"c\" alt=\"oval\" />\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"60px\", marginBottom: \"10px\" }}>\n                    <Col md=\"3\">\n                        <img style={{ width: \"100%\", height: \"auto\", position: \"sticky\", top: 0 }} src={logo} id=\"c\" alt=\"oval\" />\n                    </Col>\n                    <Col md=\"9\">\n                        <span id='about_header' >OUR  mission:</span>\n                        <div id=\"mission_text\">               Our mission is supporting Zewail City in its pursuit of excellence and building a place for\n                        the Alumni to keep ties with their alma mater by supporting their needs, elevating their\n                        connections, and assisting their career’s development. As Zewail City’s alumni\n                        association, we are intrigued to do our duties as Zewail City’s advocates for alumni in\n                        Egypt and abroad so all of us can give back to our community and country. Moreover,\n                        we look forward to facilitating alumni engagement in Zewail City and providing projects\n                        that help in the development of science and technology in Egypt. The association also\n                        serves as a channel of communication representing all alumni with Zewail City’s current\n                        students and administration to contribute to improve the education and research\n                        quality.\n                        We aspire to inspire young Zewailians and support their journey to help them\n                        gain the unique ZC spirit that Dr. Zewail instilled in each of us.\n                    </div>\n                    </Col>\n\n                </Row>\n            </Container>\n            <Container id=\"members_container\" className=\"\" style={{ marginBottom: \"100px\" }}>\n                <Row id=\"header_row\">\n                    <Col xs=\"12\" className=\"\" >\n                        <div\n                            style={{\n                                textAlign: \"left\",\n                                marginTop: \"50px\",\n                                borderTopStyle: 'solid',\n                                borderTopWidth: \"0.5px\",\n                                borderTopColor: \" #C5BCBC\",\n                                color: \"#0091AC\",\n                                marginBottom: \"50px\"\n                            }} className=\"section_title\"\n                        >\n                            members\n                   </div>\n                    </Col>\n                </Row>\n                {!loading ?\n                    <Row id=\"members_cards_row\">\n                        {members_views}\n                    </Row> : <p>loading...</p>\n                }\n            </Container>\n\n        </React.Fragment>\n\n    )\n}\n","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/shared/NavbarComponent/NavbarComponent.js",["115","116","117","118","119","120","121","122","123","124"],"import React, { useState, useEffect } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    NavbarText,\n    Container\n} from 'reactstrap';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport \"./NavbarComponent.css\"\nconst NavbarComponent = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n        <React.Fragment>\n            <Container className=\"d-flex justify-content-center\">\n                <div id=\"intro_text\" className=\"header_font\">\n                    ZEWAILCITY\n                    Alumini\n                    Association\n                </div>\n            </Container>\n            <Container fluid id=\"nav_bar_container\">\n                <Container>\n                    <div>\n                        <Navbar light expand=\"md\">\n                            <NavbarToggler onClick={toggle} />\n                            <Collapse isOpen={isOpen} navbar>\n                                <Nav className=\"mr-auto d-flex nav_list\" navbar>\n                                    <NavItem>\n                                        <Link to=\"/\">\n                                            <NavLink >Home</NavLink>\n                                        </Link>\n                                    </NavItem>\n                                    <NavItem>\n                                        <Link to=\"/ABOUTUS\">\n                                            <NavLink >about us</NavLink>\n                                        </Link>\n                                    </NavItem>\n                                    <NavItem>\n                                        <Link to=\"/\">\n                                            <NavLink >news</NavLink>\n                                        </Link>\n                                    </NavItem>\n                                    <div style={{ flexGrow: \"1\" }}>\n\n                                    </div>\n                                    <NavItem>\n                                        {/* <NavLink href={`${process.env.REACT_APP_BACKEND_URL}/auth/google`}>apply for mempership</NavLink> */}\n                                        <Link to=\"/LOGIN\">\n                                            <NavLink >apply for mempership</NavLink>\n                                        </Link>\n                                    </NavItem>\n\n\n                                </Nav>\n                                {/* <NavbarText>Simple Text</NavbarText> */}\n                            </Collapse>\n                        </Navbar>\n                    </div>\n                </Container>\n            </Container>\n\n\n        </React.Fragment>\n\n    );\n}\n\nexport default NavbarComponent;","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/shared/FooterComponent/FooterComponent.js",["125"],"import React from 'react'\nimport { Col, Container, Row } from 'reactstrap'\nimport \"./FooterComponent.css\"\nexport default function FooterComponent() {\n    return (\n        <Container id='footer_container' fluid >\n            <Container >\n                <Row>\n                    <Col md=\"3\">\n\n                        <img style={{ width: \"150px\", height: \"auto\", filter: \"grayscale(40%)\", filter: \"drop-shadow(0 0 0.75rem )\" }} src=\"/logo.png\" alt=\"oval\" />\n\n                    </Col>\n                </Row>\n            </Container>\n\n        </Container>\n    )\n}\n","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/homeComponent.js",["126","127","128","129","130","131","132","133","134","135","136","137","138","139","140"],"import news_image_1 from \"./assets/WhatsApp-Image-2019-09-09-at-11.54.56-AM.jpeg\"\nimport news_image_2 from \"./assets/nationalfinals-egypt-1.jpg\"\nimport news_image_3 from \"./assets/unnamed.jpg\"\n\n\n\nimport React from 'react'\nimport { Container, Col, Form, Row, FormGroup, Label, Input, Button } from 'reactstrap';\nimport Network_diagramComponent from \"./Network_diagramComponent/Network_diagramComponent\"\nimport zewail_image from './assets/zewail_image.jpg'\nimport helmy_image from './assets/helmy_image1.jpg'\nimport grads from './assets/grads2.jpg'\n\nimport logo from './assets/logo.png'\n\nimport welcome_illustration from './assets/welcome_illustration.png'\nimport { VectorMap } from \"react-jvectormap\"\nimport MapComponent from \"./MapComponent/MapComponent\"\nimport NewsCardComponent from \"./NewsCardComponent/NewsCardComponent\"\nimport \"./homeComponent.css\"\nimport { Card, CardHeader, CardFooter, CardBody, CardTitle, CardText } from 'reactstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLongArrowAltRight } from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nexport default function HomeComponent() {\n\n\n    return (\n        <React.Fragment className='p-0'>\n            <Network_diagramComponent logo_img={logo} />\n            <Container id=\"aboutus_container\" style={{ marginTop: \"100px\" }}>\n\n                <Row id=\"mission_row\" className=\"m-t-5 justify-content-center\" style={{ marginTop: \"30px\" }}>\n                    <Col xs={{ size: 10, order: 2 }} md={{ size: 6, order: 0 }} className=\"\" style={{ display: \"flex\", textAlign: \"left\", justifyContent: \"center\", flexDirection: \"column\" }}>\n                        <span className=\"section_title\" style={{ marginTop: \"-30px\", marginBottom: \"10px\" }}>The association vision</span>\n                        <div id=\"mission_text\">\n                            This vision aims to utilize the energy and spirit dr Ahmed Zewail inspired to us and ensure a well-\n                            connected powerful ZC community.\n                        </div>\n                        <a className=\"zcaa_link mt-lg-3\" style={{ marginTop: \"10px\" }}>\n                            read our full vision\n                            <FontAwesomeIcon icon={faLongArrowAltRight} className=\"ml-1 pt-1\" />\n                        </a>\n                    </Col>\n\n                    <Col xs={{ size: 11, order: 0 }} md={{ size: 6, order: 2 }} className=\"\">\n                        <img className=\"mb-5\" style={{ width: \"100%\", height: \"auto\" }} src={zewail_image} id=\"c\" alt=\"oval\" />\n                    </Col>\n\n\n                </Row>\n\n                <Row id=\"vision_row\" className=\"m-t-5 justify-content-center\" style={{ marginTop: \"100px\" }}>\n\n                    <Col xs=\"11\" md=\"6\" className=\"\">\n                        <img className=\"mb-5\" style={{ width: \"100%\", height: \"auto\" }} src={grads} id=\"c\" alt=\"oval\" />\n                    </Col>\n                    <Col xs=\"10\" md=\"6\" className=\"\" style={{ display: \"flex\", textAlign: \"left\", justifyContent: \"center\", flexDirection: \"column\" }}>\n                        <span className=\"section_title\" style={{ marginTop: \"-30px\", marginBottom: \"10px\" }}>The association Mission</span>\n                        <div id=\"mission_text\">\n                            Our mission is supporting Zewail City in its pursuit of excellence and building a place for\n                            the Alumni to keep ties with their alma mater by supporting their needs, elevating their\n                            connections, and assisting their career’s development.\n                        </div>\n                        <a className=\"zcaa_link mt-lg-3\" style={{ marginTop: \"10px\" }}>\n                            read our full mission\n                            <FontAwesomeIcon icon={faLongArrowAltRight} className=\"ml-1 pt-1\" />\n                        </a>\n\n                    </Col>\n\n\n                </Row>\n\n            </Container>\n            <Container id=\"featured_news_container\" className=\"\" style={{ marginTop: \"100px\" }}>\n                <Row>\n                    <Col xs=\"12\" className=\"\" >\n                        <div\n                            style={{\n                                textAlign: \"left\",\n                                marginTop: \"50px\",\n                                borderTopStyle: 'solid',\n                                borderTopWidth: \"0.5px\",\n                                borderTopColor: \" #C5BCBC\"\n                            }} className=\"section_title\"\n                        >\n                            featured news\n                        </div>\n                    </Col>\n\n                </Row>\n                <Row className=\"justify-content-center\">\n                    <Col xs=\"9\" md=\"4\" className=\"mt-5\" >\n                        <NewsCardComponent img={news_image_3}\n                            title=\"Zewail City Students Win Biotechnology Competition\"\n                            body_text=\"For the second time in a row, University of Science and Technology students achieved the first place in the Science Operations Leaders in Egypt (SOLE) competition which took place September 12, 2015 at the Faculty of Agriculture, Ain Shams University.\"\n                        />\n                    </Col>\n                    <Col xs=\"9\" md=\"4\" className=\"mt-5\" >\n                        <NewsCardComponent img={news_image_2} title=\"Zewail City Wins Shell’s National Imagine the Future Competition\"\n                            body_text=\"Students of Zewail City of Science and Technology (ZU12) won the first place in Shell’s national Imagine the Future competition 2019-2020.”\"\n                        />\n                    </Col>\n                    <Col xs=\"9\" md=\"4\" className=\"mt-5\">\n                        <NewsCardComponent img={news_image_1} title=\"New Campus Development\"\n                            body_text=\"Former Egyptian President Adly Mansour issued decree 115 on April 9, 2014, granting 198 acres to Zewail City for the construction of the new campus in the October Gardens of 6th of October City.\n\n                        President Abdel Fattah al-Sisi decreed that the new campus be built by the Engineering Authority of the Egyptian Armed Forces and inaugurated in a one-year time frame. The University of Science and Technology in Zewail City  and Research Institutes are now fully operational at current campus in October Gardens. A team of prominent architects\"\n                        />\n                    </Col>\n\n                </Row>\n            </Container>\n            <Container id=\"shadow_container_1\" fluid style={{ marginTop: \"100px\" }}>\n\n            </Container>\n            <Container id=\"welcome_container\" fluid className=\"mx-0\" >\n                <img id=\"welcome_illustration\" src={welcome_illustration} alt=\"oval\" />\n                <Container>\n                    <Row>\n                        <div id=\"welcome_title\" >\n                            Zewail city graduate ?\n                        </div>\n                    </Row>\n\n                    <Row>\n                        <Col md=\"6\">\n                            <Card id=\"welcome_card\" style={{}}>\n                                <CardHeader id=\"welcome_card_header\" style={{}}>Welcome onboard</CardHeader>\n                                <CardBody>\n                                    <CardTitle id=\"welcome_card_body\" tag=\"h5\">apply for your membership in the associasion</CardTitle>\n                                    {/* <CardText>With supporting text below as a natural lead-in to additional content.</CardText> */}\n                                    <Link to=\"/LOGIN\" style={{ textDecoration: 'none' }}>\n                                        <button className=\"welcome_btn welcome_btn2\" style={{ width: \"100%\", height: \"55px\" }}>APPLY</button>\n                                    </Link>\n\n                                </CardBody>\n                            </Card>\n                        </Col>\n\n                    </Row>\n\n\n                </Container>\n            </Container>\n            <Container id=\"map_container\" fluid className=\"\">\n                <div id=\"map_wrapper\">\n                    <MapComponent />\n                </div>\n            </Container>\n        </React.Fragment>\n\n    )\n}\n\n","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/AboutComponent/MemberCardComponent/MemberCardComponent.js",[],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/Network_diagramComponent/Network_diagramComponent.js",[],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/MapComponent/MapComponent.js",["141","142","143","144","145","146"],"import React, { useEffect, useState } from \"react\";\n\nimport { VectorMap } from \"react-jvectormap\";\nimport data from \"./country-codes-lat-long-alpha3.json\";\n\n\n\n\nconst markers2 = [\n    { latLng: [52.50, 13.39], name: 'Berlin' },\n    { latLng: [53.56, 10.00], name: 'Hamburg' },\n    { latLng: [48.13, 11.56], name: 'Munich' },\n    { latLng: [50.95, 6.96], name: 'Cologne' },\n    { latLng: [50.11, 8.68], name: 'Frankfurt am Main' },\n    { latLng: [48.77, 9.17], name: 'Stuttgart' },\n    { latLng: [51.23, 6.78], name: 'Düsseldorf' },\n    { latLng: [51.51, 7.46], name: 'Dortmund' },\n    { latLng: [51.45, 7.01], name: 'Essen' },\n    { latLng: [53.07, 8.80], name: 'Bremen' }\n]\n\nconst handleClick = (e, countryCode) => {\n    console.log(countryCode);\n    // console.log(data.ref_country_codes)\n};\n\nconst Map = () => {\n    const [markers, setMarkers] = useState([]);\n    const [count_array, setcount_array] = useState([]);\n    const [countries, setCountries] = useState([]);\n\n\n\n\n    useEffect(() => { // fetch countries data here .. only runs when the component mounts\n        setTimeout(() => {\n            const fetched_countries = [\n                { code: \"DE\", country: \"Germany\", count: 7 },\n                { code: \"RU\", country: \"Russia\", count: 10 },\n                { code: \"US\", country: \"United States\", count: 22 },\n                { code: \"FR\", country: \"France\", count: 4 },\n                { code: \"IT\", country: \"Italy\", count: 33 },\n                { code: \"AU\", country: \"Austria\", count: 2 },\n                { code: \"EG\", country: \"Egypt\", count: 50 },\n            ]\n            setCountries(fetched_countries)\n            const [markers, count_array] = produce_markers(fetched_countries, data.ref_country_codes)\n            setMarkers(markers);\n            setcount_array(count_array)\n        }\n            , 1000)\n    }, [])\n\n    const produce_markers = (countries, data) => {\n        const markers = countries.map((entry) => {\n            // console.log(data)\n            let obj = data.find(obj => obj.country == entry.country);\n            let marker = { latLng: [obj.latitude, obj.longitude], name: `${entry.count} Alumini in ${obj.country}  ` }\n            return marker\n\n        })\n\n        const count_array = countries.map((entry) => { // return array of the aluminis count in each entry of the markers \n            return entry.count\n        })\n        return ([markers, count_array])\n    }\n\n\n    const tip_handler = (e, el, code) => {\n        // console.log(el)\n        let country_data = countries.find((country) => { return (country.code == code) }) // if the country hovered dont' have alumini this will be undefined\n        console.log({ country_data })\n        // let number_of_alum = countries[code]\n        let hoverd_country_name = el.html();\n        if (el.html() === \"Israel\") {\n            hoverd_country_name = \"Palestine\";\n        }\n\n        let hovered_country = countries.find(c => c.code == code);\n        //  el.html(el.html()+' (GDP - '+countries[code]+')');\n        if (!!country_data) {\n            el.html(country_data.count + ' Alumini in ' + hoverd_country_name);\n        }\n        else {\n            el.html(hoverd_country_name);\n        }\n    }\n\n    return (\n        <VectorMap\n            markersSelectable={true}\n            markers={markers}\n            markerStyle={{\n                initial: {\n                    fill: '#26ADCB'\n                },\n                selected: {\n                    fill: '#CA0020'\n                }\n            }}\n            regionStyle={{\n                initial: {\n                    fill: '#B8E186'\n                },\n                selected: {\n                    fill: '#F4A582'\n                }\n            }}\n            series={{\n                markers: [{\n                    attribute: 'r',\n                    scale: [5, 8],\n                    values: count_array\n                }]\n            }}\n\n\n            onRegionTipShow={tip_handler}\n            map={\"world_mill\"}\n            backgroundColor=\"transparent\" //change it to ocean blue: #0077be\n            zoomOnScroll={false}\n            containerStyle={{\n                width: \"100%\",\n                height: \"100%\"\n            }}\n            onRegionClick={handleClick} //gets the country code\n            containerClassName=\"map\"\n            regionStyle={{\n                initial: {\n                    fill: \"#c9c2c2\",\n                    \"fill-opacity\": 0.9,\n                    stroke: \"none\",\n                    \"stroke-width\": 0,\n                    \"stroke-opacity\": 0\n                },\n                hover: {\n                    \"fill-opacity\": 0.8,\n                    cursor: \"pointer\"\n                },\n                selected: {\n                    fill: \"#2938bc\" //color for the clicked country\n                },\n                selectedHover: {}\n            }}\n            regionsSelectable={true}\n\n        />\n\n    );\n};\nexport default Map;","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/homeComponent/NewsCardComponent/NewsCardComponent.js",["147","148"],"import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLongArrowAltRight } from '@fortawesome/free-solid-svg-icons'\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle, Button\n} from 'reactstrap';\nimport \"./NewsCardComponent.css\"\nconst NewsCardComponent = (props) => {\n    return (\n        <div>\n            <Card style={{ width: \"100%\" }} style={{ alignItems: \"center\", minHeight: \"460px\" }}   >\n                <CardImg top style={{ objectFit: \"cover\", height: \"200px\", width: \"95%\", marginTop: \"7px\", borderRadius: \"12px\" }} src={props.img} alt=\"Card image cap\" />\n                <CardBody style={{ width: \"100%\" }}>\n                    <CardTitle tag=\"h5\" style={{ fontSize: \"18px\" }}>{props.title}</CardTitle>\n                    <CardSubtitle id=\"card_sub\" tag=\"h6\" style={{ fontSize: \"12px\" }} className=\"mb-2 text-muted\">September 14, 2015</CardSubtitle>\n                    <CardText id=\"card_body_text\" style={{ width: \"100%\", color: \"grey\" }}>\n                        <div>\n                            {props.body_text}\n                        </div>\n                    </CardText>\n                    <div className=\"d-flex\">\n                        <div className=\"zcaa_link\" style={{ marginLeft: \"auto\" }}>\n                            read more\n                            <FontAwesomeIcon icon={faLongArrowAltRight} className=\"ml-1 pt-1\" />\n                        </div>\n                    </div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n};\n\nexport default NewsCardComponent;","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/LoginComponent.js",["149","150","151","152","153","154","155","156","157","158"],"// login proccess flow : \n// on submit the form sends the data back to this login componenet and trigers its show modal function\n// on google button clicked the button sends the google credetintals to the login copnente and trigers its send data function\n// login in component sends the data to the back end and shows loading component untill the process finishs\n\n\nimport React, { useState, useCallback, useEffect } from 'react'\nimport { Container } from 'reactstrap'\nimport GooglebtnComponent from './GooglebtnComponent/GooglebtnComponent'\nimport \"./LoginComponent.css\"\nimport zc_logo from './zc_logo.png'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport FormComponent from './FormComponent/FormComponent'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nexport default function LoginComponent() {\n\n    return (\n        <React.Fragment>\n            {\n                // gdata &&\n                <Container fluid style={{ background: \"rgba(164, 223, 234, 0.15)\", minHeight: \"80vh\" }}>\n                    <FormComponent />\n                </Container>\n            }\n        </React.Fragment>\n    )\n}\n","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/GooglebtnComponent/GooglebtnComponent.js",["159","160"],"import React, { Component } from 'react'\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport \"./GooglebtnComponent.css\"\nimport zc_logo from '../zc_logo.png'\nimport google_logo from './google_logo.png'\nimport { Alert } from 'reactstrap';\n\n\nconst CLIENT_ID = '1050309843237-hjb6hmp0ku18p9oblkk5fshpvp7g0v87.apps.googleusercontent.com';\n\n\nclass GooglebtnComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLogined: false,\n            accessToken: '',\n            show_alert: false\n\n        };\n\n        this.login = this.login.bind(this);\n        this.handleLoginFailure = this.handleLoginFailure.bind(this);\n        this.logout = this.logout.bind(this);\n        this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\n    }\n\n    login(response) {\n        console.log(response)\n        if (!response.profileObj.email.endsWith('@zewailcity.edu.eg')) {\n            this.setState({ show_alert: true });\n        }\n        if (response.accessToken && response.profileObj.email.endsWith('@zewailcity.edu.eg')) {\n            this.props.onclick(response)\n            this.setState({ show_alert: false });\n            // var xhr = new XMLHttpRequest();\n            // xhr.open('POST', 'http://localhost:5000');\n            // xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n            // xhr.onload = function () {\n            //     console.log('Signed in as: ' + xhr.responseText);\n            // };\n            // xhr.send('idtoken=' + response.tokenObj.id_token);\n\n            // this.setState(state => ({\n            //     isLogined: true,\n            //     accessToken: response.accessToken\n            // }));\n        }\n    }\n\n    logout(response) {\n        this.setState(state => ({\n            isLogined: false,\n            accessToken: ''\n        }));\n    }\n\n    handleLoginFailure(response) {\n        // alert('Failed to log in')\n    }\n\n    handleLogoutFailure(response) {\n        // alert('Failed to log out')\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{ marginTop: \"20px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", display: \"flex\", flexDirection: \"column\" }}>\n                    {\n                        <GoogleLogin\n                            style={{ width: \"300px\" }}\n                            clientId={CLIENT_ID}\n                            render={renderProps => (\n                                <button id=\"verify_button\"\n                                    onClick={renderProps.onClick}\n                                    disabled={renderProps.disabled}>\n                                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                        <span style={{ marginLeft: \"10px\" }}>verfiy with google</span>\n                                        <div style={{ flexGrow: \"1\" }}></div>\n                                        <img style={{ width: \"30px\", height: \"auto\", opacity: \"1\", justifySelf: \"end\", marginRight: \"7px\" }} src={google_logo} alt=\"logo\" />\n\n                                        <img style={{ width: \"30px\", height: \"auto\", opacity: \"1\", justifySelf: \"end\" }} src={zc_logo} alt=\"logo\" />\n                                    </div>\n\n                                </button>\n                            )}\n                            buttonText='Login'\n                            onSuccess={this.login}\n                            onFailure={this.handleLoginFailure}\n                            cookiePolicy={'single_host_origin'}\n                            responseType='code,token'\n                        />\n                    }\n                    {this.state.show_alert ?\n                        <Alert color=\"danger\" className=\"mt-3\" style={{ width: \"100%\" }}>\n                            you must use a zewailcity email\n                        </Alert> : null\n                    }\n                </div>\n\n            </React.Fragment>\n\n        )\n    }\n}\n\nexport default GooglebtnComponent;\n","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/DatePickerComponent/DatePickerComponent.js",[],["161","162"],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/DatePickerComponent/TextError.js",[],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/FormComponent.js",["163","164","165","166","167","168","169","170","171","172","173","174","175","176"],"// components/contactus-form.component.js\n\nimport React, { useState, useCallback, useEffect, useRef } from 'react'\nimport { Formik, Field, Form, FieldArray, ErrorMessage } from 'formik';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'reactstrap'\nimport './FormComponent.css'\nimport CollapsingCardComponent from './CollapsingUniCardComponent/CollapsingUniCardComponent'\nimport CollapsingEntityCardComponent from './CollapsingEntityCardComponent/CollapsingEntityCardComponent'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\nimport * as Yup from 'yup';\nimport TextError from \"./TextError\"\nimport zc_logo from '../zc_logo.png'\nimport logo from '../logo.png'\nimport logo_shadowed from '../logo_shadowed.png'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport GooglebtnComponent from './GooglebtnComponent/GooglebtnComponent'\nimport ReactLoading from 'react-loading';\n\n\n\n\n\nconst SignupSchema = Yup.object().shape({\n    first_name: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n    last_name: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n    email: Yup.string().email('Invalid email'),\n    exp_field: Yup.string().required('Required'),\n    phone: Yup.number(\"must be a number\").positive(\"positive numbers only \").integer(\"integers only\"),\n    birth_day: Yup.number(\"must be a number\").min(1, 'Too Short!').max(31, 'not a day number').required('Required'),\n    birth_month: Yup.number(\"must be a number\").min(1, 'Too Short!').max(12, 'not a month number').required('Required'),\n    birth_year: Yup.number(\"must be a number\").min(1980, '1980 min').required('Required'),\n    address: Yup.string().required('Required'),\n    zc_id: Yup.number(\"must be a number\").min(201300000, '201300000 min').required('Required'),\n    grad_year: Yup.number(\"must be a number\").min(2018, '2018 min').required('Required'),\n    major: Yup.string().required('Required'),\n    residency: Yup.object().shape({\n        country: Yup.string().min(2, 'error').required('Required'),\n        region: Yup.string().min(2, 'error'),\n        // Rest of your amenities object properties\n    }),\n    new_exp_field: Yup.string().when(\"exp_field\", {\n        is: (val) => val == \"other\",\n        then: Yup.string().required(\"Required\")\n    })\n\n});\n\n\nconst FormComponent = (props) => {\n\n    // http states\n    const [Response_json_content, setResponse_json_content] = useState({});\n    const [Fetch_success, setFetch_success] = useState(false);\n    const [Sending_data, setSending_data] = useState(false);\n    const [Fetch_error, setFetch_error] = useState(false);\n    const [Error_message, setError_message] = useState(null);\n\n\n    // google modal states\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n    let [gdata, set_gdata] = useState(null)\n\n\n    const handle_click = useCallback((request_object) => {\n        set_gdata(request_object);\n    }, []);\n\n\n    const submit_applicant = async (google_data) => {\n        try {\n            toggle();\n            setSending_data(true)\n            //post data as formdata to the back end ... form data will set the content type automatically to multipart ... use multer & body-parser in back end to deal with it\n            let form_state = formRef.current.values;\n            let id_token = google_data.tokenObj.id_token\n            const body_data = { form_state, google_data }\n            console.log({ body_data })\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/auth/signup`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body_data)\n            });\n            const response_json_content = await response.json()\n            if (!response.ok) {\n                setFetch_error(true)\n                throw new Error(response_json_content.message || \"can't fetch data ... could be a connection error or unhandled backend error\");\n            }\n            setSending_data(false)\n            console.log({ response_json_content })\n            setResponse_json_content(response_json_content)\n\n            if (response_json_content.message == \"success\" || response_json_content.message == \"already_applied_before\") {\n                console.log(\"expiration from login\", response_json_content.expirateion_date_string)\n                setFetch_success(true)\n                // this.login(response_json_content.user, response_json_content.token, response_json_content.expirateion_date_string)\n            }\n\n        } catch (err) {\n            setSending_data(false)\n            setError_message(err.message)\n            console.log(err);\n        }\n    };\n\n\n    const formRef = useRef();\n\n    return (\n\n        <Formik\n            validationSchema={SignupSchema}\n            innerRef={formRef}\n            initialValues={{\n                first_name: '', last_name: '', email: '', exp_field: '', new_exp_field: '', residency: { country: \"\", region: \"\" }, content: '', phone: '', birth_day: '', birth_month: '', birth_year: '', address: '', zc_id: '', grad_year: '', major: '', minor: '', other_undergraduate_data: '', universities: ['', ''], entities: ['', '']\n            }}\n            onSubmit={\n                (values) => { toggle() } // just show the google modal on submit ... it will call the submit function when google authenticate\n            }\n        >\n            {(formik_object) => {\n                // the dispaly sequence as follows : if success state is true show the sucess component \n                // else if the data is being sent show the loading component \n                // else show the forom component ... which contains the google modal.\n                return (\n                    <Container>\n                        {\n                            Fetch_success ?\n                                <div id=\"application_sucess\">\n                                    <div style={{ marginBottom: \"30px\" }}>\n                                        {\n                                            <Container fluid style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", }}>\n                                                <div id=\"login_card\" style={{ backgroundColor: \"white\", marginTop: \"50px\" }}>\n\n                                                    <div style={{ width: \"20%\", minWidth: \"155px\", position: \"relative\", height: \"auto\", marginTop: \"50px\" }}>\n                                                        <img style={{\n                                                            width: \"100%\", minWidth: \"155px\", height: \"auto\", marginTop: \"20px\", borderRadius: \"50%\", border: '11px solid #ADE3ED'\n\n                                                        }} src={Response_json_content.user.g_picture} alt=\"logo\" />\n\n                                                        <img style={{\n                                                            width: \"30%\", minWidth: \"70px\", height: \"auto\", position: \"absolute\", bottom: \"-20px\", right: \"0px\"\n                                                            ,\n                                                        }} src={logo_shadowed} alt=\"logo\" />\n\n                                                    </div>\n\n                                                    <div style={{\n                                                        width: \"50%\", marginTop: \"10px\", fontSize: '30px',\n                                                        lineHeight: '125.5%', textAlign: 'center', textTransform: 'uppercase',\n                                                        color: '#BDD7DB', fontFamily: \"Cairo\", fontStyle: 'normal', fontWeight: 'bold',\n                                                    }}>\n                                                        <div style={{ color: \"#0091AC\", marginTop: \"30px\", }}>\n                                                            Welocme\n                                                    </div>\n                                                        <div>\n                                                            to the family\n                                                    </div>\n                                                    </div>\n                                                </div>\n                                            </Container>}\n                                    </div>\n                                </div>\n                                :\n                                (Sending_data ?\n                                    <div id=\"loading_spinner\" style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"400px\" }} >\n                                        <div style={{ marginTop: \"100px\" }}>\n                                            <ReactLoading type={\"spin\"} color={\"#00D2F9\"} width={\"20vw\"} />\n                                        </div>\n                                    </div>\n                                    :\n                                    <div id=\"form_and_modal\">\n\n                                        <div id=\"google_modal\" >\n                                            <Modal\n                                                size=\"lg\" style={{ maxWidth: '1600px', width: '80%', marginRight: \"auto\", marginLeft: \"auto\", backgroundColor: 'transparent' }}\n                                                isOpen={modal} toggle={toggle}>\n                                                {/* <ModalHeader toggle={toggle} style={{ borderBottom: \"0px solid #dee2e6\" }}></ModalHeader> */}\n                                                <div style={{}} ></div>\n                                                <ModalBody style={{ padding: \"0px\" }} >\n                                                    <div style={{}}>\n                                                        {!gdata && <Container fluid style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"0px\" }}>\n                                                            <div id=\"login_card\" style={{}}>\n                                                                <img style={{ width: \"200px\", height: \"auto\", opacity: \"0.5\", marginTop: \"50px\" }} src={zc_logo} alt=\"logo\" />\n                                                                <div id=\"login_disclimare\" >\n                                                                    <span className=\"font1\">You need to have a </span>\n                                                                    <span className=\"font2\">zewailcity email </span>\n                                                                    <span className=\"font1\">to apply </span>\n                                                                </div>\n                                                                <div style={{ marginTop: \"10px\" }}>\n                                                                    <GooglebtnComponent onclick={submit_applicant} />\n                                                                </div>\n                                                            </div>\n                                                        </Container>}\n                                                    </div>\n                                                </ModalBody>\n                                                {/* <ModalFooter>\n                        <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\n                        <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n                    </ModalFooter> */}\n                                            </Modal>\n                                        </div>\n\n                                        <Form>\n\n                                            <div id=\"personal_info_section \">\n                                                <Row >\n                                                    <Col xs=\"12\" className=\"\" >\n                                                        <div\n                                                            style={{\n                                                                textAlign: \"left\",\n                                                                marginTop: \"50px\",\n                                                                marginBottom: \"50px\",\n                                                                borderBottomStyle: 'solid',\n                                                                borderBottomWidth: \"0.5px\",\n                                                                borderBottomColor: \" #C5BCBC\"\n                                                            }} className=\"form_section_title\"\n                                                        >\n                                                            featured news\n                                    </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col lg=\"4\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"first_name\" className=\"form_text\">first name </label>\n                                                            <Field name=\"first_name\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='first_name' component={TextError} />\n                                                        </div>\n                                                    </Col>\n                                                    <Col lg=\"4\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"last_name\" className=\"form_text\" >Last name</label>\n                                                            <Field name=\"last_name\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='last_name' component={TextError} />\n\n                                                        </div>\n                                                    </Col>\n\n\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col lg=\"8\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"email\" className=\"form_text\" style={{ letterSpacing: '0.2em' }}>prefered email for communication\n                                            <span style={{ color: \"#0091AC\", fontWeight: \"bolder\", fontSize: \"11\" }}>{\" (Optional)\"}</span>\n                                                            </label>\n                                                            <Field name=\"email\" className=\"form-control in_field \" type=\"email\" />\n                                                            <ErrorMessage name='email' component={TextError} />\n\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col lg=\"8\">\n                                                        <label className=\"form_text\">\n                                                            Birth date\n                                        </label>\n                                                    </Col>\n\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col xs=\"10\" lg=\"2\" >\n                                                        <div className=\"form-group my-0\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"birth_day\" className=\"form_text2\">Day</label>\n                                                            <Field name=\"birth_day\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='birth_day' component={TextError} />\n\n                                                        </div>\n                                                    </Col>\n                                                    <Col xs=\"10\" lg=\"2\" >\n                                                        <div className=\"form-group my-0\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"birth_month\" className=\"form_text2\">month</label>\n                                                            <Field name=\"birth_month\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='birth_month' component={TextError} />\n\n                                                        </div>\n                                                    </Col>\n                                                    <Col xs=\"10\" lg=\"2\" >\n                                                        <div className=\"form-group my-0\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"birth_year\" className=\"form_text2\">year</label>\n                                                            <Field name=\"birth_year\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='birth_year' component={TextError} />\n\n                                                        </div>\n\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end mt-5\">\n                                                    <Col lg=\"8\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"phone\" className=\"form_text\">phone\n                                            <span style={{ color: \"#0091AC\", fontWeight: \"bolder\", fontSize: \"11\" }}>{\" (Optional)\"}</span>\n                                                            </label>\n                                                            <Field name=\"phone\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='phone' component={TextError} />\n\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col lg=\"4\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"residency.country\" className=\"form_text\"> country of residence </label>\n                                                            <Field name=\"residency.country\" className=\"form-control in_field\" >\n                                                                {({ form, field }) => {\n                                                                    const { setFieldValue } = form\n                                                                    const { setFieldTouched } = form\n\n                                                                    const value = field.value\n                                                                    return (\n                                                                        <CountryDropdown\n                                                                            valueType=\"short\"\n                                                                            style={{ width: \"100%\" }}\n                                                                            className=\"in_field form-control\"\n                                                                            value={value}\n                                                                            onClick={val => { console.log(formik_object) }}\n                                                                            onBlur={\n                                                                                val => setFieldTouched(`residency.country`)\n                                                                            }\n                                                                            onChange={val => { console.log(formik_object); setFieldValue(`residency.country`, val) }} />\n                                                                    )\n                                                                }}\n                                                            </Field>\n                                                            <ErrorMessage name='residency.country' component={TextError} />\n                                                        </div>\n                                                    </Col>\n\n                                                    <Col lg=\"4\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"residency.region\" className=\"form_text\">region/city </label>\n                                                            <Field name=\"residency.region\" className=\"form-control in_field\" >\n                                                                {({ form, field }) => {\n                                                                    const { setFieldValue } = form\n                                                                    const value = field.value\n                                                                    return (\n                                                                        <RegionDropdown\n                                                                            country={formik_object.values.residency.country}\n                                                                            style={{ width: \"100%\" }}\n                                                                            className=\"in_field form-control\"\n                                                                            value={value}\n                                                                            countryValueType=\"short\"\n                                                                            onChange={val => setFieldValue(`residency.region`, val)} />\n                                                                    )\n                                                                }}\n                                                            </Field>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end \">\n                                                    <Col lg=\"8\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"address\" className=\"form_text\">address </label>\n                                                            <Field name=\"address\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='address' component={TextError} />\n\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n\n                                            <div id=\"undergrad_info_section \">\n                                                <Row >\n                                                    <Col xs=\"12\" className=\"\" >\n                                                        <div\n                                                            style={{\n                                                                textAlign: \"left\",\n                                                                marginTop: \"50px\",\n                                                                marginBottom: \"50px\",\n                                                                borderBottomStyle: 'solid',\n                                                                borderBottomWidth: \"0.5px\",\n                                                                borderBottomColor: \" #C5BCBC\"\n                                                            }} className=\"form_section_title\"\n                                                        >\n                                                            undergrad info\n                                    </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col lg=\"8\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"zc_id\" className=\"form_text\">Your ZC ID </label>\n                                                            <Field name=\"zc_id\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='zc_id' component={TextError} />\n\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col lg=\"8\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"grad_year\" className=\"form_text\">graduation year </label>\n                                                            <Field name=\"grad_year\" className=\"form-control in_field\" type=\"text\" />\n                                                            <ErrorMessage name='grad_year' component={TextError} />\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col lg=\"4\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"major\" className=\"form_text\">Major </label>\n                                                            <Field name=\"major\" as=\"select\" className=\"form-control in_field\">\n                                                                <option value=\"\">Select major</option>\n                                                                <option value=\"environmental engineering\">Environmental engineering</option>\n                                                                <option value=\"nanotechnology engineering\">Nanotechnology engineering</option>\n                                                                <option value=\"renewable energy engineering\">Renewable energy engineering</option>\n                                                                <option value=\"Aerospace engineering\">Aerospace engineering</option>\n                                                                <option value=\"communications engineering\">Communications engineering</option>\n                                                                <option value=\"biomedical science\">Biomedical science</option>\n                                                                <option value=\"materials science\">Materials science</option>\n                                                                <option value=\"nanoscience\">Nanoscience</option>\n                                                                <option value=\"physics of the earth and universe\">physics of the earth and universe</option>\n                                                            </Field>\n                                                            <ErrorMessage name='major' component={TextError} />\n                                                        </div>\n                                                    </Col>\n                                                    <Col lg=\"4\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"minor\" className=\"form_text\">minor\n                                            <span style={{ color: \"#0091AC\", fontWeight: \"bolder\", fontSize: \"11\" }}>{\" (Optional)\"}</span>\n                                                            </label>\n                                                            <Field name=\"minor\" as=\"select\" className=\"form-control in_field\">\n                                                                <option value=\"\">Select minor</option>\n                                                                <option value=\"environmental engineering\">environmental engineering</option>\n                                                                <option value=\"nanotechnology engineering\">nanotechnology engineering</option>\n                                                                <option value=\"renewable energy engineering\">renewable energy engineering</option>\n                                                                <option value=\"Aerospace engineering\">Aerospace engineering</option>\n                                                                <option value=\"communications engineering\">communications engineering</option>\n                                                                <option value=\"biomedical science\">biomedical science</option>\n                                                                <option value=\"materials science\">materials science</option>\n                                                                <option value=\"nanoscience\">nanoscience</option>\n                                                                <option value=\"physics of the earth and universe\">physics of the earth and universe</option>\n                                                            </Field>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end\">\n                                                    <Col lg=\"8\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"other_undergraduate_data\" className=\"form_text\">Others\n                                            <span style={{ color: \"#0091AC\", fontWeight: \"bolder\", fontSize: \"11\" }}>{\" (Optional)\"}</span>\n                                                            </label>\n                                                            <Field name=\"other_undergraduate_data\" className=\"form-control in_field\" type=\"text\" />\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n\n                                            <div id=\"career_info_section \">\n                                                <Row >\n                                                    <Col xs=\"12\" className=\"\" >\n                                                        <div\n                                                            style={{\n                                                                textAlign: \"left\",\n                                                                marginTop: \"50px\",\n                                                                marginBottom: \"50px\",\n                                                                borderBottomStyle: 'solid',\n                                                                borderBottomWidth: \"0.5px\",\n                                                                borderBottomColor: \" #C5BCBC\"\n                                                            }} className=\"form_section_title\"\n                                                        >\n                                                            career info\n                                    </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"justify-content-end \">\n                                                    <Col lg=\"8\">\n                                                        <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                            <label htmlFor=\"exp_field\" className=\"form_text\">field of experience </label>\n                                                            <Field name=\"exp_field\" as=\"select\" className=\"form-control in_field\"\n                                                                onClick={() => console.log(formik_object.errors)}\n                                                            >\n                                                                <option value=\"\">Select field of experience</option>\n                                                                <option value=\"software engineering\">software engineering</option>\n                                                                <option value=\"model based design\">model based design</option>\n                                                                <option value=\"computational biology\">computational biology</option>\n                                                                <option value=\"other\">other</option>\n                                                            </Field>\n                                                            <ErrorMessage name='exp_field' component={TextError} />\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                {formik_object.values.exp_field == \"other\" &&\n                                                    <Row className=\"justify-content-end \">\n                                                        <Col lg=\"8\">\n                                                            <div className=\"form-group\" style={{ width: \"100%\" }}>\n                                                                <label htmlFor=\"new_exp_field\" className=\"form_text\"> type your field of experience </label>\n                                                                <Field name=\"new_exp_field\" type=\"text\" className=\"form-control in_field\">\n                                                                </Field>\n                                                                <ErrorMessage name='new_exp_field' component={TextError} />\n\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                }\n                                                <Row id=\"universities_card\" className=\"justify-content-end\" style={{ marginTop: \"50px\" }}>\n                                                    <Col lg=\"8\" >\n                                                        <div className=\" from_group_box\">\n                                                            <div className=\"form_text3 \" >Universities\n                                            <div style={{ color: \"#ADE3ED\", fontWeight: \"bolder\", fontSize: \"15px\", letterSpacing: \".1em\" }}>{\" (Optional)\"}</div>\n                                                            </div>\n                                                            <div className=\"form_text4 \" >What universities other than ZC have you visted?</div>\n                                                            <div className=\"d-flex \">\n                                                                <div className=\"form-group mx-3  ml-lg-4 \" style={{ width: \"100%\" }}>\n                                                                    <FieldArray name='universities'>\n                                                                        {fieldArrayProps => {\n                                                                            const { push, remove, form } = fieldArrayProps\n                                                                            const { values } = form\n                                                                            const { universities } = values\n                                                                            return (\n                                                                                <div>\n                                                                                    {universities.map((phNumber, index) => (\n                                                                                        <div className=\"d-flex mt-5 mx-4 mt-lg-4 mx-lg-0\">\n                                                                                            <div key={index} style={{ width: \"100%\" }}>\n                                                                                                <CollapsingCardComponent index={index} remove={remove} />\n                                                                                            </div>\n                                                                                            <div className=\"form-group  my-0 d-none d-lg-flex\"\n                                                                                                style={{ width: \"70px\", color: \"grey\", fontSize: \"30px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}\n                                                                                            >\n                                                                                                {\n                                                                                                    // index > 0 &&\n                                                                                                    (\n                                                                                                        <div className=\"trash_icon\" title={`delete university ${index}`} style={{}} onClick={() => remove(index)}>\n                                                                                                            <FontAwesomeIcon icon={faTrashAlt} className=\"pt-1\" />\n                                                                                                        </div>\n                                                                                                    )}\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    ))}\n                                                                                    < div style={{ display: \"flex\", justifyContent: \"center\", fontSize: \"40px\", flexDirection: \"column\", justifyItems: \"center\", alignItems: \"center\" }}>\n                                                                                        <div onClick={() => push('')} type=\"button\" class=\"  plus_button \">\n                                                                                            <FontAwesomeIcon icon={faPlus} />\n                                                                                        </div>\n                                                                                        <div className=\"plus_button_text\">\n                                                                                            Add more universities\n                                                                        </div>\n                                                                                    </div >\n                                                                                </div>\n                                                                            )\n                                                                        }}\n                                                                    </FieldArray>\n\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row id=\"entities_card\" className=\"justify-content-end\" style={{ marginTop: \"50px\" }}>\n                                                    <Col lg=\"8\" >\n                                                        <div className=\" from_group_box\">\n                                                            <div className=\"form_text3 \" >{'compamies & organizations '}\n                                                                <div style={{ color: \"#ADE3ED\", fontWeight: \"bolder\", fontSize: \"15px\", letterSpacing: \".1em\" }}>{\" (Optional)\"}</div>\n                                                            </div>\n                                                            <div className=\"form_text4 \" >What entites did you visit during your career?</div>\n                                                            <div className=\"d-flex \">\n                                                                <div className=\"form-group mx-3  ml-lg-4 \" style={{ width: \"100%\" }}>\n                                                                    <FieldArray name='entities'>\n                                                                        {fieldArrayProps => {\n                                                                            const { push, remove, form } = fieldArrayProps\n                                                                            const { values } = form\n                                                                            const { entities } = values\n\n                                                                            return (\n                                                                                <div>\n                                                                                    {entities.map((phNumber, index) => (\n                                                                                        <div className=\"d-flex mt-4\">\n                                                                                            <div key={index} style={{ width: \"100%\" }}>\n                                                                                                <CollapsingEntityCardComponent index={index} remove={remove} />\n                                                                                            </div>\n                                                                                            <div className=\"form-group  my-0 d-none d-lg-flex\"\n                                                                                                style={{ width: \"70px\", color: \"grey\", fontSize: \"30px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}\n                                                                                            >\n                                                                                                {\n                                                                                                    // index > 0 &&\n                                                                                                    (\n                                                                                                        <div className=\"trash_icon\" title={`delete entity ${index}`} style={{}} onClick={() => remove(index)}>\n                                                                                                            <FontAwesomeIcon icon={faTrashAlt} className=\"pt-1\" />\n                                                                                                        </div>\n                                                                                                    )}\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    ))}\n                                                                                    < div style={{ display: \"flex\", justifyContent: \"center\", fontSize: \"40px\", flexDirection: \"column\", justifyItems: \"center\", alignItems: \"center\" }}>\n                                                                                        <div onClick={() => push('')} type=\"button\" class=\"  plus_button \">\n                                                                                            <FontAwesomeIcon icon={faPlus} />\n                                                                                        </div>\n                                                                                        <div className=\"plus_button_text\">\n                                                                                            Add more entities\n                                                                        </div>\n                                                                                    </div >\n                                                                                </div>\n                                                                            )\n                                                                        }}\n                                                                    </FieldArray>\n\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div >\n\n                                            {/* <div style={{ height: \"100px\", marginTop: \"100px\" }}>{JSON.stringify(formik_object.values, null, 2)}</div> */}\n                                            <div className=\"\" style={{ marginTop: \"100px\", display: \"flex\", justifyContent: 'flex-end', alignItems: 'flex-end', }}>\n                                                <button style={{ marginBottom: \"100px\" }} type=\"submit\" className=\"btn btn-primary\" disabled={!formik_object.isValid} >{!formik_object.isValid ? \"form data not valid\" : \"Submit\"}</button>\n                                                {/* <div style={{ height: \"100px\", marginTop: \"100px\" }}>{JSON.stringify(formik_object.isValid, null, 2)}</div> */}\n                                            </div>\n\n                                        </Form>\n\n                                    </div>\n                                )\n                        }\n                    </Container>\n\n                )\n            }}\n        </Formik >\n\n    );\n};\n\nexport default FormComponent;","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/CollapsingUniCardComponent/CollapsingUniCardComponent.js",["177","178","179","180","181","182","183"],"import React, { useState } from 'react';\nimport { Container, Col, Row, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { Collapse, } from 'reactstrap';\nimport { FormText } from 'reactstrap';\nimport { Card, CardHeader, CardBody, } from 'reactstrap';\nimport \"./CollapsingUniCardComponent.css\"\nimport { Formik, Field, Form } from 'formik';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronCircleDown } from '@fortawesome/free-solid-svg-icons'\nimport DateView from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction CollapsingCardComponent(props) {\n    const index = props.index;\n\n    const [IsOpen, setIsOpen] = useState(false);\n\n\n\n\n    return (\n        <div>\n\n            <Card className=\"mt-1\">\n                <CardHeader className=\"session_card_head box_header p-0 d-flex m-0\" style={\n                    IsOpen ? {\n                        borderColor: 'rgb(38, 173, 203)',\n                        borderWidth: '.1px',\n                    }\n                        :\n\n                        { borderWidth: \"0px\" }\n                }>\n\n                    <div className=\"header_forms  mx-lg-3 \">\n                        <Container>\n                            <Row className=\"justify-content-start mt-2\">\n                                <Col lg=\"8\" className=\"pr-lg-1 px-2\">\n                                    <div className=\"form-group mb-1\" style={{ width: \"100%\" }}>\n                                        <label htmlFor={`university_${index}`} className=\"form_text mb-1\" >{`university ${index + 1} name`} </label>\n                                        <Field name={`universities[${index}].uni_name`} className=\"form-control in_field\" >\n                                            {/* <Field name={`university_${index}`} className=\"form-control in_field\" > */}\n                                        </Field>\n                                    </div>\n                                </Col>\n                                <Col lg=\"4\" className=\"pl-lg-1 px-2\">\n                                    <div className=\"form-group mb-1\" style={{ width: \"100%\" }}>\n                                        <label htmlFor={`universities[${index}].visit_type`} className=\"form_text mb-1\"> visit type </label>\n                                        <Field name={`universities[${index}].visit_type`} as=\"select\" className=\"form-control in_field mb-3 mb-lg-0\">\n                                            <option value=\"PHD\">PHD student</option>\n                                            <option value=\"Masters\">Masters student</option>\n                                            <option value=\"intern\">intern</option>\n                                            <option value=\"Others\">Others</option>\n                                        </Field>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                    <div className=\" header_buttons\">\n\n                        <div className=\"header_addinfo_button noselect\" onClick={() => setIsOpen(!IsOpen)} >\n                            <FontAwesomeIcon icon={faChevronCircleDown} className=\"pt-lg-0 pb-1 add_info_icon\" />\n                            <div className=\"add_info_text\" style={{ fontSize: \"10px\", marginTop: \"5px\", textAlign: \"center\", width: \"80%\" }}>add more info</div>\n                        </div>\n\n                        <div className=\"header_delete_button\" style={{}} onClick={() => props.remove(index)}>\n                            <FontAwesomeIcon icon={faTrashAlt} className=\"pt-1\" />\n                        </div>\n                    </div>\n\n\n\n                </CardHeader>\n\n                <Collapse isOpen={IsOpen} style={{\n                    borderColor: 'rgb(38, 173, 203)',\n                    borderStyle: 'dashed',\n                    borderWidth: '1.5px',\n                    borderTopWidth: '0px'\n                }}>\n                    <CardBody>\n                        <Container row>\n                            <Row>\n                                <Col sm={3} className=\"d-flex justify-content-md-end pr-0\">\n                                    <div htmlFor={`universities[${index}].major`} className=\"card_body_labels mb-1\">\n                                        <div>\n                                            Major\n                                        </div>\n\n                                    </div>\n                                </Col>\n                                <Col sm={9}>\n                                    <Field name={`universities[${index}].major`} className=\"form-control in_field\" >\n                                        {/* <Field name={`university_${index}`} className=\"form-control in_field\" > */}\n                                    </Field>\n                                </Col>\n                                <Col sm={3} className=\"d-flex justify-content-md-end pr-0\">\n                                    <div htmlFor={`universities[${index}].major`} className=\"card_body_labels mb-1\">\n                                        Graduation date\n                                    </div>\n                                </Col>\n                                <Col sm={9}>\n                                    {/* <Field name={`universities[${index}].major`} className=\"form-control in_field\" >\n                                    </Field> */}\n                                    <Field name={`universities[${index}].grad_date`} className=\"form-control in_field\" >\n                                        {({ form, field }) => {\n                                            const { setFieldValue } = form\n                                            const { value } = field\n                                            return (\n                                                <DateView className=\"form-control in_field\"\n                                                    style={{\n                                                        textAlign: \"end\"\n                                                    }}\n                                                    id={`universities[${index}].date`}\n                                                    {...field}\n                                                    selected={value}\n                                                    onChange={val => setFieldValue(`universities[${index}].grad_date`, val)}\n                                                />\n                                            )\n                                        }}\n                                    </Field>\n                                </Col>\n                                <Col sm={3} className=\"d-flex justify-content-md-end pr-0\">\n                                    <div htmlFor={`universities[${index}].linkedin`} className=\"card_body_labels mb-1\">\n                                        university linkedin page URL\n                                    </div>\n                                </Col>\n                                <Col sm={9}>\n                                    <Field name={`universities[${index}].linkedin`} className=\"form-control in_field\" >\n                                        {/* <Field name={`university_${index}`} className=\"form-control in_field\" > */}\n                                    </Field>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </CardBody>\n                </Collapse>\n            </Card>\n\n        </div>\n    )\n}\n\nexport default CollapsingCardComponent\n","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/CollapsingEntityCardComponent/CollapsingEntityCardComponent.js",["184","185","186","187","188","189","190","191","192"],"import React, { useState } from 'react';\nimport { Container, Col, Row, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { Collapse, } from 'reactstrap';\nimport { FormText } from 'reactstrap';\nimport { Card, CardHeader, CardBody, } from 'reactstrap';\nimport \"./CollapsingEntityCardComponent.css\"\nimport { Formik, Field, Form } from 'formik';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronCircleDown } from '@fortawesome/free-solid-svg-icons'\nimport DateView from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\nfunction CollapsingEntityCardComponent(props) {\n    const index = props.index;\n\n    const [IsOpen, setIsOpen] = useState(false);\n\n\n\n\n    return (\n        <div>\n\n            <Card className=\"mt-1\">\n                <CardHeader className=\"session_card_head box_header p-0 d-flex m-0\" style={\n                    IsOpen ? {\n                        borderColor: 'rgb(38, 173, 203)',\n                        borderWidth: '.1px',\n                    }\n                        :\n\n                        { borderWidth: \"0px\" }\n                }>\n\n                    <div className=\"header_forms  mx-lg-3 \">\n                        <Container>\n                            <Row className=\"justify-content-start mt-2\">\n                                <Col lg=\"8\" className=\"pr-lg-1 px-2\">\n                                    <div className=\"form-group mb-1\" style={{ width: \"100%\" }}>\n                                        <label htmlFor={`entities[${index}].entity_name`} className=\"form_text mb-1\" >{`entity ${index + 1} name`} </label>\n                                        <Field name={`entities[${index}].entity_name`} className=\"form-control in_field\" >\n                                            {/* <Field name={`university_${index}`} className=\"form-control in_field\" > */}\n                                        </Field>\n                                    </div>\n                                </Col>\n                                <Col lg=\"4\" className=\"pl-lg-1 px-2\">\n                                    <div className=\"form-group mb-1\" style={{ width: \"100%\" }}>\n                                        <label htmlFor={`entities[${index}].job_title`} className=\"form_text mb-1\"> job title </label>\n                                        <Field name={`entities[${index}].job_title`} className=\"form-control in_field mb-3 mb-lg-0\">\n                                        </Field>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                    <div className=\" header_buttons\">\n\n                        <div className=\"header_addinfo_button noselect \" onClick={() => setIsOpen(!IsOpen)} >\n                            <FontAwesomeIcon icon={faChevronCircleDown} className=\"pt-lg-0 pb-1 add_info_icon\" />\n                            <div className=\"add_info_text\" style={{ fontSize: \"10px\", marginTop: \"5px\", textAlign: \"center\", width: \"80%\" }}>add more info</div>\n                        </div>\n\n                        <div className=\"header_delete_button\" style={{}} onClick={() => props.remove(index)}>\n                            <FontAwesomeIcon icon={faTrashAlt} className=\"pt-1\" />\n                        </div>\n                    </div>\n\n\n\n                </CardHeader>\n\n                <Collapse isOpen={IsOpen} style={{\n                    borderColor: 'rgb(38, 173, 203)',\n                    borderStyle: 'dashed',\n                    borderWidth: '1.5px',\n                    borderTopWidth: '0px'\n                }}>\n                    <CardBody>\n                        <Container row>\n                            <Row>\n                                <Col sm={3} className=\"d-flex justify-content-md-end pr-0\">\n                                    <div htmlFor={`entities[${index}].country`} className=\"card_body_labels mb-1\">\n                                        <div>\n                                            Country\n                                        </div>\n\n                                    </div>\n                                </Col>\n                                <Col sm={9}>\n\n                                    <Field name={`entities[${index}].country`} className=\"form-control in_field\" >\n                                        {({ form, field }) => {\n                                            const { setFieldValue } = form\n                                            const value = field.value\n                                            return (\n                                                <CountryDropdown\n                                                    valueType=\"short\"\n                                                    style={{ width: \"100%\" }}\n                                                    className=\"in_field form-control\"\n                                                    value={value}\n                                                    onChange={val => { console.log(field); setFieldValue(`entities[${index}].country`, val) }} />\n                                            )\n                                        }}\n                                    </Field>\n                                </Col>\n\n                                <Col sm={3} className=\"d-flex justify-content-md-end pr-0\">\n                                    <div htmlFor={`entities[${index}].start_date`} className=\"card_body_labels mb-1\">\n                                        Start date\n                                    </div>\n                                </Col>\n                                <Col sm={9}>\n                                    {/* <Field name={`entities[${index}].major`} className=\"form-control in_field\" >\n                                    </Field> */}\n                                    <Field name={`entities[${index}].start_date`} className=\"form-control in_field\" >\n                                        {({ form, field }) => {\n                                            const { setFieldValue } = form\n                                            const { value } = field\n                                            return (\n                                                <DateView className=\"form-control in_field\"\n                                                    style={{\n                                                        textAlign: \"end\"\n                                                    }}\n                                                    id={`entities[${index}].start_date`}\n                                                    {...field}\n                                                    selected={value}\n                                                    onChange={val => setFieldValue(`entities[${index}].start_date`, val)}\n                                                />\n                                            )\n                                        }}\n                                    </Field>\n                                </Col>\n\n\n\n                                <Col sm={3} className=\"d-flex justify-content-md-end pr-0\">\n                                    <div htmlFor={`entities[${index}].end_date`} className=\"card_body_labels mb-1\">\n                                        End date\n                                    </div>\n                                </Col>\n                                <Col sm={9}>\n                                    {/* <Field name={`entities[${index}].major`} className=\"form-control in_field\" >\n                                    </Field> */}\n                                    <Field name={`entities[${index}].end_date`} className=\"form-control in_field\" >\n                                        {({ form, field }) => {\n                                            const { setFieldValue } = form\n                                            const { value } = field\n                                            return (\n                                                <DateView className=\"form-control in_field\"\n                                                    style={{\n                                                        textAlign: \"end\"\n                                                    }}\n                                                    id={`entities[${index}].end_date`}\n                                                    {...field}\n                                                    selected={value}\n                                                    onChange={val => setFieldValue(`entities[${index}].end_date`, val)}\n                                                />\n                                            )\n                                        }}\n                                    </Field>\n                                </Col>\n\n                                <Col sm={3} className=\"d-flex justify-content-md-end pr-0\">\n                                    <div htmlFor={`entities[${index}].department`} className=\"card_body_labels mb-1\">\n                                        department\n                                    </div>\n                                </Col>\n                                <Col sm={9}>\n                                    <Field name={`entities[${index}].department`} className=\"form-control in_field\" >\n                                        {/* <Field name={`university_${index}`} className=\"form-control in_field\" > */}\n                                    </Field>\n                                </Col>\n\n                                <Col sm={3} className=\"d-flex justify-content-md-end pr-0\">\n                                    <div htmlFor={`entities[${index}].linkedin`} className=\"card_body_labels mb-1\">\n                                        entity linkedin page URL\n                                    </div>\n                                </Col>\n                                <Col sm={9}>\n                                    <Field name={`entities[${index}].linkedin`} className=\"form-control in_field\" >\n                                        {/* <Field name={`university_${index}`} className=\"form-control in_field\" > */}\n                                    </Field>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </CardBody>\n                </Collapse>\n            </Card>\n\n        </div>\n    )\n}\n\nexport default CollapsingEntityCardComponent\n","/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/TextError.js",[],"/home/ganam/active_wsl_projects/ZCAA/frontend/src/components/pages/LoginComponent/FormComponent/GooglebtnComponent/GooglebtnComponent.js",["193","194"],"import React, { Component } from 'react'\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport \"./GooglebtnComponent.css\"\nimport zc_logo from '../../zc_logo.png'\nimport google_logo from './google_logo.png'\nimport { Alert } from 'reactstrap';\n\n\nconst CLIENT_ID = '1050309843237-hjb6hmp0ku18p9oblkk5fshpvp7g0v87.apps.googleusercontent.com';\n\n\nclass GooglebtnComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLogined: false,\n            accessToken: '',\n            show_alert: false\n\n        };\n\n        this.login = this.login.bind(this);\n        this.handleLoginFailure = this.handleLoginFailure.bind(this);\n        this.logout = this.logout.bind(this);\n        this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\n    }\n\n    login(response) {\n        console.log(response)\n        if (!response.profileObj.email.endsWith('@zewailcity.edu.eg')) {\n            this.setState({ show_alert: true });\n        }\n        if (response.accessToken && response.profileObj.email.endsWith('@zewailcity.edu.eg')) {\n            this.props.onclick(response)\n            this.setState({ show_alert: false });\n            // var xhr = new XMLHttpRequest();\n            // xhr.open('POST', 'http://localhost:5000');\n            // xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n            // xhr.onload = function () {\n            //     console.log('Signed in as: ' + xhr.responseText);\n            // };\n            // xhr.send('idtoken=' + response.tokenObj.id_token)\n            this.setState(state => ({\n                isLogined: true,\n                accessToken: response.accessToken\n            }));\n        }\n    }\n\n    logout(response) {\n        this.setState(state => ({\n            isLogined: false,\n            accessToken: ''\n        }));\n    }\n\n    handleLoginFailure(response) {\n        // alert('Failed to log in')\n    }\n\n    handleLogoutFailure(response) {\n        // alert('Failed to log out')\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{ marginTop: \"20px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", display: \"flex\", flexDirection: \"column\" }}>\n                    {\n                        <GoogleLogin\n                            style={{ width: \"300px\" }}\n                            clientId={CLIENT_ID}\n                            render={renderProps => (\n                                <button id=\"verify_button\"\n                                    onClick={renderProps.onClick}\n                                    disabled={renderProps.disabled}>\n                                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                        <span style={{ marginLeft: \"10px\" }}>verfiy with google</span>\n                                        <div style={{ flexGrow: \"1\" }}></div>\n                                        <img style={{ width: \"30px\", height: \"auto\", opacity: \"1\", justifySelf: \"end\", marginRight: \"7px\" }} src={google_logo} alt=\"logo\" />\n                                        <img style={{ width: \"30px\", height: \"auto\", opacity: \"1\", justifySelf: \"end\" }} src={zc_logo} alt=\"logo\" />\n                                    </div>\n                                </button>\n                            )}\n                            buttonText='Login'\n                            onSuccess={this.login}\n                            onFailure={this.handleLoginFailure}\n                            cookiePolicy={'single_host_origin'}\n                            responseType='code,token'\n                        />\n                    }\n                    {this.state.show_alert ?\n                        <Alert color=\"danger\" className=\"mt-3\" style={{ width: \"100%\" }}>\n                            you must use a zewailcity email\n                        </Alert> : null\n                    }\n                </div>\n\n            </React.Fragment>\n\n        )\n    }\n}\n\nexport default GooglebtnComponent;\n","/home/ganam/active_wsl_projects/ZCAA/frontend/src/ScrollToTopComponent.js",[],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":1,"column":8,"nodeType":"201","messageId":"202","endLine":1,"endColumn":12},{"ruleId":"199","severity":1,"message":"203","line":2,"column":27,"nodeType":"201","messageId":"202","endLine":2,"endColumn":38},{"ruleId":"199","severity":1,"message":"204","line":2,"column":40,"nodeType":"201","messageId":"202","endLine":2,"endColumn":49},{"ruleId":"199","severity":1,"message":"205","line":6,"column":35,"nodeType":"201","messageId":"202","endLine":6,"endColumn":41},{"ruleId":"199","severity":1,"message":"206","line":6,"column":50,"nodeType":"201","messageId":"202","endLine":6,"endColumn":54},{"ruleId":"199","severity":1,"message":"207","line":17,"column":11,"nodeType":"201","messageId":"202","endLine":17,"endColumn":25},{"ruleId":"199","severity":1,"message":"208","line":7,"column":12,"nodeType":"201","messageId":"202","endLine":7,"endColumn":19},{"ruleId":"199","severity":1,"message":"204","line":1,"column":27,"nodeType":"201","messageId":"202","endLine":1,"endColumn":36},{"ruleId":"199","severity":1,"message":"209","line":6,"column":5,"nodeType":"201","messageId":"202","endLine":6,"endColumn":16},{"ruleId":"199","severity":1,"message":"210","line":10,"column":5,"nodeType":"201","messageId":"202","endLine":10,"endColumn":25},{"ruleId":"199","severity":1,"message":"211","line":11,"column":5,"nodeType":"201","messageId":"202","endLine":11,"endColumn":19},{"ruleId":"199","severity":1,"message":"212","line":12,"column":5,"nodeType":"201","messageId":"202","endLine":12,"endColumn":17},{"ruleId":"199","severity":1,"message":"213","line":13,"column":5,"nodeType":"201","messageId":"202","endLine":13,"endColumn":17},{"ruleId":"199","severity":1,"message":"214","line":14,"column":5,"nodeType":"201","messageId":"202","endLine":14,"endColumn":15},{"ruleId":"199","severity":1,"message":"215","line":18,"column":22,"nodeType":"201","messageId":"202","endLine":18,"endColumn":28},{"ruleId":"199","severity":1,"message":"205","line":19,"column":5,"nodeType":"201","messageId":"202","endLine":19,"endColumn":11},{"ruleId":"199","severity":1,"message":"216","line":20,"column":5,"nodeType":"201","messageId":"202","endLine":20,"endColumn":10},{"ruleId":"217","severity":1,"message":"218","line":11,"column":97,"nodeType":"219","messageId":"220","endLine":11,"endColumn":103},{"ruleId":"199","severity":1,"message":"221","line":8,"column":26,"nodeType":"201","messageId":"202","endLine":8,"endColumn":30},{"ruleId":"199","severity":1,"message":"222","line":8,"column":37,"nodeType":"201","messageId":"202","endLine":8,"endColumn":46},{"ruleId":"199","severity":1,"message":"223","line":8,"column":48,"nodeType":"201","messageId":"202","endLine":8,"endColumn":53},{"ruleId":"199","severity":1,"message":"224","line":8,"column":55,"nodeType":"201","messageId":"202","endLine":8,"endColumn":60},{"ruleId":"199","severity":1,"message":"225","line":8,"column":62,"nodeType":"201","messageId":"202","endLine":8,"endColumn":68},{"ruleId":"199","severity":1,"message":"226","line":11,"column":8,"nodeType":"201","messageId":"202","endLine":11,"endColumn":19},{"ruleId":"199","severity":1,"message":"227","line":17,"column":10,"nodeType":"201","messageId":"202","endLine":17,"endColumn":19},{"ruleId":"199","severity":1,"message":"228","line":21,"column":28,"nodeType":"201","messageId":"202","endLine":21,"endColumn":38},{"ruleId":"199","severity":1,"message":"229","line":21,"column":61,"nodeType":"201","messageId":"202","endLine":21,"endColumn":69},{"ruleId":"199","severity":1,"message":"215","line":25,"column":27,"nodeType":"201","messageId":"202","endLine":25,"endColumn":33},{"ruleId":"199","severity":1,"message":"205","line":25,"column":35,"nodeType":"201","messageId":"202","endLine":25,"endColumn":41},{"ruleId":"199","severity":1,"message":"216","line":25,"column":43,"nodeType":"201","messageId":"202","endLine":25,"endColumn":48},{"ruleId":"230","severity":1,"message":"231","line":31,"column":13,"nodeType":"232","endLine":31,"endColumn":57},{"ruleId":"233","severity":1,"message":"234","line":41,"column":25,"nodeType":"232","endLine":41,"endColumn":88},{"ruleId":"233","severity":1,"message":"234","line":66,"column":25,"nodeType":"232","endLine":66,"endColumn":88},{"ruleId":"199","severity":1,"message":"235","line":9,"column":7,"nodeType":"201","messageId":"202","endLine":9,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":57,"column":52,"nodeType":"238","messageId":"220","endLine":57,"endColumn":54},{"ruleId":"236","severity":1,"message":"237","line":72,"column":79,"nodeType":"238","messageId":"220","endLine":72,"endColumn":81},{"ruleId":"199","severity":1,"message":"239","line":80,"column":13,"nodeType":"201","messageId":"202","endLine":80,"endColumn":28},{"ruleId":"236","severity":1,"message":"237","line":80,"column":58,"nodeType":"238","messageId":"220","endLine":80,"endColumn":60},{"ruleId":"240","severity":1,"message":"241","line":129,"column":13,"nodeType":"242","endLine":145,"endColumn":15},{"ruleId":"199","severity":1,"message":"225","line":6,"column":30,"nodeType":"201","messageId":"202","endLine":6,"endColumn":36},{"ruleId":"240","severity":1,"message":"241","line":12,"column":45,"nodeType":"242","endLine":12,"endColumn":97},{"ruleId":"199","severity":1,"message":"243","line":7,"column":17,"nodeType":"201","messageId":"202","endLine":7,"endColumn":25},{"ruleId":"199","severity":1,"message":"203","line":7,"column":27,"nodeType":"201","messageId":"202","endLine":7,"endColumn":38},{"ruleId":"199","severity":1,"message":"204","line":7,"column":40,"nodeType":"201","messageId":"202","endLine":7,"endColumn":49},{"ruleId":"199","severity":1,"message":"244","line":9,"column":8,"nodeType":"201","messageId":"202","endLine":9,"endColumn":26},{"ruleId":"199","severity":1,"message":"245","line":11,"column":8,"nodeType":"201","messageId":"202","endLine":11,"endColumn":15},{"ruleId":"199","severity":1,"message":"225","line":16,"column":10,"nodeType":"201","messageId":"202","endLine":16,"endColumn":16},{"ruleId":"199","severity":1,"message":"246","line":16,"column":18,"nodeType":"201","messageId":"202","endLine":16,"endColumn":23},{"ruleId":"199","severity":1,"message":"247","line":16,"column":25,"nodeType":"201","messageId":"202","endLine":16,"endColumn":36},{"ruleId":"199","severity":1,"message":"248","line":16,"column":38,"nodeType":"201","messageId":"202","endLine":16,"endColumn":47},{"ruleId":"199","severity":1,"message":"249","line":16,"column":49,"nodeType":"201","messageId":"202","endLine":16,"endColumn":60},{"ruleId":"199","severity":1,"message":"250","line":2,"column":23,"nodeType":"201","messageId":"202","endLine":2,"endColumn":35},{"ruleId":"217","severity":1,"message":"251","line":70,"column":115,"nodeType":"219","messageId":"220","endLine":70,"endColumn":122},{"ruleId":"195","replacedBy":"252"},{"ruleId":"197","replacedBy":"253"},{"ruleId":"199","severity":1,"message":"204","line":3,"column":40,"nodeType":"201","messageId":"202","endLine":3,"endColumn":49},{"ruleId":"199","severity":1,"message":"254","line":14,"column":43,"nodeType":"201","messageId":"202","endLine":14,"endColumn":60},{"ruleId":"199","severity":1,"message":"200","line":18,"column":8,"nodeType":"201","messageId":"202","endLine":18,"endColumn":12},{"ruleId":"199","severity":1,"message":"225","line":20,"column":10,"nodeType":"201","messageId":"202","endLine":20,"endColumn":16},{"ruleId":"199","severity":1,"message":"247","line":20,"column":25,"nodeType":"201","messageId":"202","endLine":20,"endColumn":36},{"ruleId":"199","severity":1,"message":"249","line":20,"column":49,"nodeType":"201","messageId":"202","endLine":20,"endColumn":60},{"ruleId":"236","severity":1,"message":"237","line":53,"column":26,"nodeType":"238","messageId":"220","endLine":53,"endColumn":28},{"ruleId":"199","severity":1,"message":"255","line":66,"column":12,"nodeType":"201","messageId":"202","endLine":66,"endColumn":23},{"ruleId":"199","severity":1,"message":"256","line":67,"column":12,"nodeType":"201","messageId":"202","endLine":67,"endColumn":25},{"ruleId":"199","severity":1,"message":"257","line":76,"column":11,"nodeType":"201","messageId":"202","endLine":76,"endColumn":23},{"ruleId":"199","severity":1,"message":"258","line":87,"column":17,"nodeType":"201","messageId":"202","endLine":87,"endColumn":25},{"ruleId":"236","severity":1,"message":"237","line":106,"column":47,"nodeType":"238","messageId":"220","endLine":106,"endColumn":49},{"ruleId":"236","severity":1,"message":"237","line":106,"column":93,"nodeType":"238","messageId":"220","endLine":106,"endColumn":95},{"ruleId":"236","severity":1,"message":"237","line":496,"column":81,"nodeType":"238","messageId":"220","endLine":496,"endColumn":83},{"ruleId":"199","severity":1,"message":"222","line":2,"column":31,"nodeType":"201","messageId":"202","endLine":2,"endColumn":40},{"ruleId":"199","severity":1,"message":"223","line":2,"column":42,"nodeType":"201","messageId":"202","endLine":2,"endColumn":47},{"ruleId":"199","severity":1,"message":"224","line":2,"column":49,"nodeType":"201","messageId":"202","endLine":2,"endColumn":54},{"ruleId":"199","severity":1,"message":"225","line":2,"column":56,"nodeType":"201","messageId":"202","endLine":2,"endColumn":62},{"ruleId":"199","severity":1,"message":"259","line":4,"column":10,"nodeType":"201","messageId":"202","endLine":4,"endColumn":18},{"ruleId":"199","severity":1,"message":"260","line":7,"column":10,"nodeType":"201","messageId":"202","endLine":7,"endColumn":16},{"ruleId":"199","severity":1,"message":"221","line":7,"column":25,"nodeType":"201","messageId":"202","endLine":7,"endColumn":29},{"ruleId":"199","severity":1,"message":"222","line":2,"column":31,"nodeType":"201","messageId":"202","endLine":2,"endColumn":40},{"ruleId":"199","severity":1,"message":"223","line":2,"column":42,"nodeType":"201","messageId":"202","endLine":2,"endColumn":47},{"ruleId":"199","severity":1,"message":"224","line":2,"column":49,"nodeType":"201","messageId":"202","endLine":2,"endColumn":54},{"ruleId":"199","severity":1,"message":"225","line":2,"column":56,"nodeType":"201","messageId":"202","endLine":2,"endColumn":62},{"ruleId":"199","severity":1,"message":"259","line":4,"column":10,"nodeType":"201","messageId":"202","endLine":4,"endColumn":18},{"ruleId":"199","severity":1,"message":"260","line":7,"column":10,"nodeType":"201","messageId":"202","endLine":7,"endColumn":16},{"ruleId":"199","severity":1,"message":"221","line":7,"column":25,"nodeType":"201","messageId":"202","endLine":7,"endColumn":29},{"ruleId":"199","severity":1,"message":"261","line":13,"column":27,"nodeType":"201","messageId":"202","endLine":13,"endColumn":41},{"ruleId":"199","severity":1,"message":"254","line":13,"column":43,"nodeType":"201","messageId":"202","endLine":13,"endColumn":60},{"ruleId":"199","severity":1,"message":"250","line":2,"column":23,"nodeType":"201","messageId":"202","endLine":2,"endColumn":35},{"ruleId":"217","severity":1,"message":"251","line":69,"column":115,"nodeType":"219","messageId":"220","endLine":69,"endColumn":122},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'login_function' is assigned a value but never used.","'members' is assigned a value but never used.","'NavbarBrand' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'NavbarText' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","no-dupe-keys","Duplicate key 'filter'.","ObjectExpression","unexpected","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'helmy_image' is defined but never used.","'VectorMap' is defined but never used.","'CardFooter' is defined but never used.","'CardText' is defined but never used.","react/jsx-pascal-case","Imported JSX component Network_diagramComponent must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'markers2' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'hovered_country' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'GooglebtnComponent' is defined but never used.","'zc_logo' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'GoogleLogout' is defined but never used.","Duplicate key 'display'.",["262"],["263"],"'CountryRegionData' is defined but never used.","'Fetch_error' is assigned a value but never used.","'Error_message' is assigned a value but never used.","'handle_click' is assigned a value but never used.","'id_token' is assigned a value but never used.","'FormText' is defined but never used.","'Formik' is defined but never used.","'RegionDropdown' is defined but never used.","no-global-assign","no-unsafe-negation"]